"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""constraints""|""relative:///Bodies.cs:411:25:411:35""]] is useless, since its value is never read.","/Bodies.cs","411","25","411","73"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""localInertiaReference""|""relative:///Bodies.cs:445:21:445:41""]] is useless, since its value is never read.","/Bodies.cs","445","21","445","94"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""m0""|""relative:///Bodies_GatherScatter.cs:218:25:218:26""]] is useless, since its value is never read.","/Bodies_GatherScatter.cs","218","25","218","61"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""m1""|""relative:///Bodies_GatherScatter.cs:219:25:219:26""]] is useless, since its value is never read.","/Bodies_GatherScatter.cs","219","25","219","94"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""m2""|""relative:///Bodies_GatherScatter.cs:220:25:220:26""]] is useless, since its value is never read.","/Bodies_GatherScatter.cs","220","25","220","94"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""m3""|""relative:///Bodies_GatherScatter.cs:221:25:221:26""]] is useless, since its value is never read.","/Bodies_GatherScatter.cs","221","25","221","94"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""m4""|""relative:///Bodies_GatherScatter.cs:222:25:222:26""]] is useless, since its value is never read.","/Bodies_GatherScatter.cs","222","25","222","94"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""m0""|""relative:///Bodies_GatherScatter.cs:421:25:421:26""]] is useless, since its value is never read.","/Bodies_GatherScatter.cs","421","25","421","107"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""m1""|""relative:///Bodies_GatherScatter.cs:422:25:422:26""]] is useless, since its value is never read.","/Bodies_GatherScatter.cs","422","25","422","107"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""m2""|""relative:///Bodies_GatherScatter.cs:423:25:423:26""]] is useless, since its value is never read.","/Bodies_GatherScatter.cs","423","25","423","107"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""m3""|""relative:///Bodies_GatherScatter.cs:424:25:424:26""]] is useless, since its value is never read.","/Bodies_GatherScatter.cs","424","25","424","107"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""child""|""relative:///Collidables/BigCompound.cs:56:25:56:29""]] is useless, since its value is never read.","/Collidables/BigCompound.cs","56","25","56","47"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""shapeIndex""|""relative:///Collidables/BoundingBoxBatcher.cs:280:21:280:30""]] is useless, since its value is never read.","/Collidables/BoundingBoxBatcher.cs","280","21","280","54"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""child""|""relative:///Collidables/Compound.cs:143:25:143:29""]] is useless, since its value is never read.","/Collidables/Compound.cs","143","25","143","47"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""x""|""relative:///Collidables/ConvexHullHelper.cs:99:21:99:21""]] is useless, since its value is never read.","/Collidables/ConvexHullHelper.cs","99","21","99","43"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""y""|""relative:///Collidables/ConvexHullHelper.cs:100:21:100:21""]] is useless, since its value is never read.","/Collidables/ConvexHullHelper.cs","100","21","100","43"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""x""|""relative:///Collidables/ConvexHullHelper.cs:99:21:99:21""]] is useless, since its value is never read.","/Collidables/ConvexHullHelper.cs","121","17","121","39"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""y""|""relative:///Collidables/ConvexHullHelper.cs:100:21:100:21""]] is useless, since its value is never read.","/Collidables/ConvexHullHelper.cs","122","17","122","39"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""compound""|""relative:///CollisionDetection/CollisionTasks/ConvexCompoundCollisionTask.cs:56:29:56:36""]] is useless, since its value is never read.","/CollisionDetection/CollisionTasks/ConvexCompoundCollisionTask.cs","56","29","56","74"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""previousIndex""|""relative:///CollisionDetection/CollisionTasks/TriangleConvexHullTester.cs:234:21:234:33""]] is useless, since its value is never read.","/CollisionDetection/CollisionTasks/TriangleConvexHullTester.cs","256","21","256","41"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""useEdgeCaseForA""|""relative:///CollisionDetection/CollisionTasks/TrianglePairTester.cs:426:17:426:31""]] is useless, since its value is never read.","/CollisionDetection/CollisionTasks/TrianglePairTester.cs","430","13","430","79"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""useEdgeCaseForB""|""relative:///CollisionDetection/CollisionTasks/TrianglePairTester.cs:427:17:427:31""]] is useless, since its value is never read.","/CollisionDetection/CollisionTasks/TrianglePairTester.cs","431","13","431","79"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""useFaceCaseForA""|""relative:///CollisionDetection/CollisionTasks/TrianglePairTester.cs:428:17:428:31""]] is useless, since its value is never read.","/CollisionDetection/CollisionTasks/TrianglePairTester.cs","432","13","432","79"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""edgeEpsilon""|""relative:///CollisionDetection/CollisionTasks/TrianglePairTester.cs:487:17:487:27""]] is useless, since its value is never read.","/CollisionDetection/CollisionTasks/TrianglePairTester.cs","487","17","487","69"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""constraintCacheIndex""|""relative:///CollisionDetection/NarrowPhaseConstraintUpdate.cs:176:21:176:40""]] is useless, since its value is never read.","/CollisionDetection/NarrowPhaseConstraintUpdate.cs","176","21","176","67"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""pairLocation""|""relative:///CollisionDetection/PairCache_Activity.cs:64:29:64:40""]] is useless, since its value is never read.","/CollisionDetection/PairCache_Activity.cs","64","29","64","85"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""prestepMaterial""|""relative:///Constraints/Contact/ContactNonconvexCommon.cs:250:21:250:35""]] is useless, since its value is never read.","/Constraints/Contact/ContactNonconvexCommon.cs","250","21","250","84"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""prestepMaterial""|""relative:///Constraints/Contact/ContactNonconvexCommon.cs:189:21:189:35""]] is useless, since its value is never read.","/Constraints/Contact/ContactNonconvexCommon.cs","189","21","189","84"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""bundleReferences""|""relative:///Constraints/FourBodyTypeProcessor.cs:74:25:74:40""]] is useless, since its value is never read.","/Constraints/FourBodyTypeProcessor.cs","74","25","74","74"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""states""|""relative:///Constraints/FourBodyTypeProcessor.cs:115:21:115:26""]] is useless, since its value is never read.","/Constraints/FourBodyTypeProcessor.cs","115","21","115","62"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""motionStates""|""relative:///Constraints/FourBodyTypeProcessor.cs:161:21:161:32""]] is useless, since its value is never read.","/Constraints/FourBodyTypeProcessor.cs","161","21","161","68"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""states""|""relative:///Constraints/OneBodyTypeProcessor.cs:92:21:92:26""]] is useless, since its value is never read.","/Constraints/OneBodyTypeProcessor.cs","92","21","92","62"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""motionStates""|""relative:///Constraints/OneBodyTypeProcessor.cs:125:21:125:32""]] is useless, since its value is never read.","/Constraints/OneBodyTypeProcessor.cs","125","21","125","68"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""upperLeft""|""relative:///Constraints/SwivelHinge.cs:147:21:147:29""]] is useless, since its value is never read.","/Constraints/SwivelHinge.cs","147","21","147","99"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""bundleReferences""|""relative:///Constraints/ThreeBodyTypeProcessor.cs:69:25:69:40""]] is useless, since its value is never read.","/Constraints/ThreeBodyTypeProcessor.cs","69","25","69","74"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""states""|""relative:///Constraints/ThreeBodyTypeProcessor.cs:110:21:110:26""]] is useless, since its value is never read.","/Constraints/ThreeBodyTypeProcessor.cs","110","21","110","62"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""motionStates""|""relative:///Constraints/ThreeBodyTypeProcessor.cs:152:21:152:32""]] is useless, since its value is never read.","/Constraints/ThreeBodyTypeProcessor.cs","152","21","152","68"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""states""|""relative:///Constraints/TwoBodyTypeProcessor.cs:181:21:181:26""]] is useless, since its value is never read.","/Constraints/TwoBodyTypeProcessor.cs","181","21","181","62"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""motionStates""|""relative:///Constraints/TwoBodyTypeProcessor.cs:218:21:218:32""]] is useless, since its value is never read.","/Constraints/TwoBodyTypeProcessor.cs","218","21","218","68"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""constraintHandle""|""relative:///Constraints/TypeProcessor.cs:119:17:119:32""]] is useless, since its value is never read.","/Constraints/TypeProcessor.cs","119","17","119","82"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""sourceIndex""|""relative:///Constraints/TypeProcessor.cs:851:21:851:31""]] is useless, since its value is never read.","/Constraints/TypeProcessor.cs","851","21","851","56"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""targetIndex""|""relative:///Constraints/TypeProcessor.cs:852:21:852:31""]] is useless, since its value is never read.","/Constraints/TypeProcessor.cs","852","21","852","47"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""targetFallbackTypeBatchesToSources""|""relative:///IslandAwakener.cs:673:88:673:121""]] is useless, since its value is never read.","/IslandAwakener.cs","673","180","673","228"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""inactiveConstraintSet""|""relative:///IslandSleeper.cs:448:37:448:57""]] is useless, since its value is never read.","/IslandSleeper.cs","448","37","448","85"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""workerCount""|""relative:///PoseIntegrator.cs:425:17:425:27""]] is useless, since its value is never read.","/PoseIntegrator.cs","425","17","425","89"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""bundleCount""|""relative:///PoseIntegrator.cs:453:17:453:27""]] is useless, since its value is never read.","/PoseIntegrator.cs","453","17","453","70"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""halfDt""|""relative:///PoseIntegrator.cs:455:17:455:22""]] is useless, since its value is never read.","/PoseIntegrator.cs","455","17","455","59"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""bundleCount""|""relative:///PoseIntegrator.cs:495:17:495:27""]] is useless, since its value is never read.","/PoseIntegrator.cs","495","17","495","70"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""bundleCount""|""relative:///PoseIntegrator.cs:539:17:539:27""]] is useless, since its value is never read.","/PoseIntegrator.cs","539","17","539","70"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""negativeOne""|""relative:///PoseIntegrator.cs:547:17:547:27""]] is useless, since its value is never read.","/PoseIntegrator.cs","547","17","547","49"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""constraintReferences""|""relative:///SequentialFallbackBatch.cs:133:25:133:44""]] is useless, since its value is never read.","/SequentialFallbackBatch.cs","133","25","133","106"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""bodyReference""|""relative:///SequentialFallbackBatch.cs:191:25:191:37""]] is useless, since its value is never read.","/SequentialFallbackBatch.cs","191","25","191","68"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""count""|""relative:///SequentialFallbackBatch.cs:210:33:210:37""]] is useless, since its value is never read.","/SequentialFallbackBatch.cs","210","33","210","83"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""processor""|""relative:///Solver.cs:855:33:855:41""]] is useless, since its value is never read.","/Solver.cs","855","33","855","76"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""set""|""relative:///Solver.cs:987:21:987:23""]] is useless, since its value is never read.","/Solver.cs","987","21","987","39"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""indexToHandle""|""relative:///Solver.cs:1695:17:1695:29""]] is useless, since its value is never read.","/Solver.cs","1695","17","1695","62"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""integrationFlagsForBatch""|""relative:///Solver_Solve.cs:554:33:554:56""]] is useless, since its value is never read.","/Solver_Solve.cs","554","33","554","103"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""batchCount""|""relative:///Solver_Solve.cs:800:17:800:26""]] is useless, since its value is never read.","/Solver_Solve.cs","800","17","800","52"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""flagsForBatch""|""relative:///Solver_Solve.cs:1085:29:1085:41""]] is useless, since its value is never read.","/Solver_Solve.cs","1085","29","1085","76"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""flagsForTypeBatch""|""relative:///Solver_Solve.cs:1090:33:1090:49""]] is useless, since its value is never read.","/Solver_Solve.cs","1090","33","1090","85"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""integrationFlagsForBatch""|""relative:///Solver_Solve.cs:1445:33:1445:56""]] is useless, since its value is never read.","/Solver_Solve.cs","1445","33","1445","82"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""stagingChildren""|""relative:///Trees/Tree_BinnedRefine.cs:419:17:419:31""]] is useless, since its value is never read.","/Trees/Tree_BinnedRefine.cs","419","17","419","49"
"Useless assignment to local variable","An assignment to a local variable that is not used later on, or whose value is always overwritten, has no effect.","warning","This assignment to [[""leafIndex""|""relative:///Trees/Tree_RefineCommon.cs:299:29:299:37""]] is useless, since its value is never read.","/Trees/Tree_RefineCommon.cs","299","29","299","66"
"Feature envy","A method that uses more methods or variables from another (unrelated) class than from its own class violates the principle of putting data and behavior in the same place.","recommendation","Method ScatterPose is too closely tied to [[""Avx""|""file:///usr/share/dotnet/packs/Microsoft.NETCore.App.Ref/6.0.0/ref/net6.0/System.Runtime.Intrinsics.dll:0:0:0:0""]]: 6 dependencies to it, but only 1 dependencies to its own type.","/Bodies_GatherScatter.cs","487","28","487","38"
"Feature envy","A method that uses more methods or variables from another (unrelated) class than from its own class violates the principle of putting data and behavior in the same place.","recommendation","Method ScatterInertia is too closely tied to [[""Avx""|""file:///usr/share/dotnet/packs/Microsoft.NETCore.App.Ref/6.0.0/ref/net6.0/System.Runtime.Intrinsics.dll:0:0:0:0""]]: 6 dependencies to it, but only 1 dependencies to its own type.","/Bodies_GatherScatter.cs","556","28","556","41"
"Feature envy","A method that uses more methods or variables from another (unrelated) class than from its own class violates the principle of putting data and behavior in the same place.","recommendation","Method ScatterVelocities<> is too closely tied to [[""Avx""|""file:///usr/share/dotnet/packs/Microsoft.NETCore.App.Ref/6.0.0/ref/net6.0/System.Runtime.Intrinsics.dll:0:0:0:0""]]: 6 dependencies to it, but only 2 dependencies to its own type.","/Bodies_GatherScatter.cs","629","28","629","59"
"Feature envy","A method that uses more methods or variables from another (unrelated) class than from its own class violates the principle of putting data and behavior in the same place.","recommendation","Method IsKinematic is too closely tied to [[""Avx""|""file:///usr/share/dotnet/packs/Microsoft.NETCore.App.Ref/6.0.0/ref/net6.0/System.Runtime.Intrinsics.dll:0:0:0:0""]]: 4 dependencies to it, but only 1 dependencies to its own type.","/Bodies.cs","341","35","341","45"
"Feature envy","A method that uses more methods or variables from another (unrelated) class than from its own class violates the principle of putting data and behavior in the same place.","recommendation","Method HasLockedInertia is too closely tied to [[""Avx""|""file:///usr/share/dotnet/packs/Microsoft.NETCore.App.Ref/6.0.0/ref/net6.0/System.Runtime.Intrinsics.dll:0:0:0:0""]]: 4 dependencies to it, but only 0 dependencies to its own type.","/Bodies.cs","372","35","372","50"
"Feature envy","A method that uses more methods or variables from another (unrelated) class than from its own class violates the principle of putting data and behavior in the same place.","recommendation","Method TransposeMotionStates is too closely tied to [[""Avx""|""file:///usr/share/dotnet/packs/Microsoft.NETCore.App.Ref/6.0.0/ref/net6.0/System.Runtime.Intrinsics.dll:0:0:0:0""]]: 6 dependencies to it, but only 0 dependencies to its own type.","/Bodies_GatherScatter.cs","154","35","154","55"
"Feature envy","A method that uses more methods or variables from another (unrelated) class than from its own class violates the principle of putting data and behavior in the same place.","recommendation","Method PrintRemovalInformation is too closely tied to [[""Solver""|""relative:///Solver.cs:19:35:19:40""]]: 4 dependencies to it, but only 1 dependencies to its own type.
Method PrintRemovalInformation is too closely tied to [[""Solver""|""relative:///Solver_Solve.cs:20:26:20:31""]]: 4 dependencies to it, but only 1 dependencies to its own type.","/CollisionDetection/FreshnessChecker.cs","135","21","135","43"
"Feature envy","A method that uses more methods or variables from another (unrelated) class than from its own class violates the principle of putting data and behavior in the same place.","recommendation","Method ExecuteFlushJob is too closely tied to [[""ConstraintRemover""|""relative:///CollisionDetection/ConstraintRemover.cs:22:18:22:34""]]: 5 dependencies to it, but only 2 dependencies to its own type.","/CollisionDetection/NarrowPhase.cs","210","14","210","28"
"Feature envy","A method that uses more methods or variables from another (unrelated) class than from its own class violates the principle of putting data and behavior in the same place.","recommendation","Method GetBlockingBodyHandles is too closely tied to [[""Bodies""|""relative:///Bodies.cs:34:26:34:31""]]: 4 dependencies to it, but only 1 dependencies to its own type.
Method GetBlockingBodyHandles is too closely tied to [[""Bodies""|""relative:///Bodies_GatherScatter.cs:16:26:16:31""]]: 4 dependencies to it, but only 1 dependencies to its own type.","/Solver.cs","1059","30","1059","51"
"Feature envy","A method that uses more methods or variables from another (unrelated) class than from its own class violates the principle of putting data and behavior in the same place.","recommendation","Method AddSleepingToActiveForFallback is too closely tied to [[""Solver""|""relative:///Solver.cs:19:35:19:40""]]: 4 dependencies to it, but only 1 dependencies to its own type.
Method AddSleepingToActiveForFallback is too closely tied to [[""Solver""|""relative:///Solver_Solve.cs:20:26:20:31""]]: 4 dependencies to it, but only 1 dependencies to its own type.","/Constraints/TypeProcessor.cs","949","46","949","75"
"Feature envy","A method that uses more methods or variables from another (unrelated) class than from its own class violates the principle of putting data and behavior in the same place.","recommendation","Method CopySleepingToActive is too closely tied to [[""BundleIndexing""|""file:///home/badgy/sw/s02_e04/test_repos/manual_check/bepuphysics2/BepuUtilities/BundleIndexing.cs:14:25:14:38""]]: 4 dependencies to it, but only 0 dependencies to its own type.","/Constraints/TypeProcessor.cs","1022","46","1022","65"
"Feature envy","A method that uses more methods or variables from another (unrelated) class than from its own class violates the principle of putting data and behavior in the same place.","recommendation","Method IntegratePoseAndVelocity<> is too closely tied to [[""PoseIntegration""|""relative:///PoseIntegrator.cs:100:25:100:39""]]: 4 dependencies to it, but only 0 dependencies to its own type.","/Constraints/TypeProcessor.cs","1207","35","1207","80"
"Feature envy","A method that uses more methods or variables from another (unrelated) class than from its own class violates the principle of putting data and behavior in the same place.","recommendation","Method IntegrateVelocity<,> is too closely tied to [[""PoseIntegration""|""relative:///PoseIntegrator.cs:100:25:100:39""]]: 4 dependencies to it, but only 0 dependencies to its own type.","/Constraints/TypeProcessor.cs","1254","35","1254","96"
"Feature envy","A method that uses more methods or variables from another (unrelated) class than from its own class violates the principle of putting data and behavior in the same place.","recommendation","Method TransferConstraint is too closely tied to [[""Solver""|""relative:///Solver.cs:19:35:19:40""]]: 4 dependencies to it, but only 0 dependencies to its own type.
Method TransferConstraint is too closely tied to [[""Solver""|""relative:///Solver_Solve.cs:20:26:20:31""]]: 4 dependencies to it, but only 0 dependencies to its own type.","/Constraints/TypeProcessor.cs","734","44","734","61"
"Feature envy","A method that uses more methods or variables from another (unrelated) class than from its own class violates the principle of putting data and behavior in the same place.","recommendation","Method IntegrateKinematicPosesAndVelocities is too closely tied to [[""Bodies""|""relative:///Bodies.cs:34:26:34:31""]]: 4 dependencies to it, but only 2 dependencies to its own type.
Method IntegrateKinematicPosesAndVelocities is too closely tied to [[""Bodies""|""relative:///Bodies_GatherScatter.cs:16:26:16:31""]]: 4 dependencies to it, but only 2 dependencies to its own type.","/PoseIntegrator.cs","492","30","492","65"
"Feature envy","A method that uses more methods or variables from another (unrelated) class than from its own class violates the principle of putting data and behavior in the same place.","recommendation","Method IntegrateBundlesAfterSubstepping is too closely tied to [[""Bodies""|""relative:///Bodies.cs:34:26:34:31""]]: 5 dependencies to it, but only 2 dependencies to its own type.
Method IntegrateBundlesAfterSubstepping is too closely tied to [[""Bodies""|""relative:///Bodies_GatherScatter.cs:16:26:16:31""]]: 5 dependencies to it, but only 2 dependencies to its own type.
Method IntegrateBundlesAfterSubstepping is too closely tied to [[""PoseIntegration""|""relative:///PoseIntegrator.cs:100:25:100:39""]]: 4 dependencies to it, but only 2 dependencies to its own type.","/PoseIntegrator.cs","536","21","536","52"
"Feature envy","A method that uses more methods or variables from another (unrelated) class than from its own class violates the principle of putting data and behavior in the same place.","recommendation","Method BuildWorkBlocks<> is too closely tied to [[""Math""|""file:///usr/share/dotnet/packs/Microsoft.NETCore.App.Ref/6.0.0/ref/net6.0/System.Runtime.dll:0:0:0:0""]]: 4 dependencies to it, but only 0 dependencies to its own type.","/Solver_Solve.cs","687","31","687","63"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method DoJob has a parameter of ref type which can consume more energy than a non-ref type","/BatchCompressor.cs","148","21","148","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Compare has a parameter of ref type which can consume more energy than a non-ref type","/BatchCompressor.cs","193","24","193","30"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TryToFindBetterBatchForConstraint has a parameter of ref type which can consume more energy than a non-ref type","/BatchCompressor.cs","130","29","130","61"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyCompression has a parameter of ref type which can consume more energy than a non-ref type","/BatchCompressor.cs","200","29","200","44"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method EnumerateConnectedRawBodyReferences<> has a parameter of ref type which can consume more energy than a non-ref type","/Solver.cs","1801","28","1801","75"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method EnumerateConnectedRawBodyReferences<> has a parameter of ref type which can consume more energy than a non-ref type","/Solver.cs","1813","28","1813","75"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TransferConstraint has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","112","28","112","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FallbackGatherInertia has a parameter of ref type which can consume more energy than a non-ref type","/Bodies_GatherScatter.cs","84","28","84","48"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ScatterPose has a parameter of ref type which can consume more energy than a non-ref type","/Bodies_GatherScatter.cs","487","28","487","38"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ScatterInertia has a parameter of ref type which can consume more energy than a non-ref type","/Bodies_GatherScatter.cs","556","28","556","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ScatterVelocities<> has a parameter of ref type which can consume more energy than a non-ref type","/Bodies_GatherScatter.cs","629","28","629","59"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RemoveCollidableFromBroadPhase has a parameter of ref type which can consume more energy than a non-ref type","/Bodies.cs","168","14","168","43"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IsKinematicUnsafeGCHole has a parameter of ref type which can consume more energy than a non-ref type","/Bodies.cs","317","37","317","59"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method UpdateForKinematicStateChange has a parameter of ref type which can consume more energy than a non-ref type","/Bodies.cs","392","21","392","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method EnumerateConnectedBodyIndices<> has a parameter of ref type which can consume more energy than a non-ref type","/Bodies.cs","730","23","730","64"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method EnumerateConnectedBodies<> has a parameter of ref type which can consume more energy than a non-ref type","/Bodies.cs","756","21","756","57"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddCollidableToBroadPhase has a parameter of ref type which can consume more energy than a non-ref type","/Bodies.cs","148","14","148","38"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddActive has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/BroadPhase.cs","85","20","85","28"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ContributeToHash<> has a parameter of ref type which can consume more energy than a non-ref type","/InvasiveHashDiagnostics.cs","141","21","141","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method EnumerateConnectedBodyReferences<> has a parameter of ref type which can consume more energy than a non-ref type","/Solver.cs","1841","28","1841","72"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WriteGatherInertia has a parameter of ref type which can consume more energy than a non-ref type","/Bodies_GatherScatter.cs","20","29","20","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WriteGatherMotionState has a parameter of ref type which can consume more energy than a non-ref type","/Bodies_GatherScatter.cs","34","29","34","50"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FallbackGatherMotionState has a parameter of ref type which can consume more energy than a non-ref type","/Bodies_GatherScatter.cs","46","28","46","52"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WriteFirst has a parameter of ref type which can consume more energy than a non-ref type","/BodyProperties.cs","318","28","318","37"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/BodyReference.cs","355","28","355","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyAngularImpulse has a parameter of ref type which can consume more energy than a non-ref type","/BodyReference.cs","383","28","383","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyLinearImpulse has a parameter of ref type which can consume more energy than a non-ref type","/BodyReference.cs","396","28","396","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExpandBoundingBox has a parameter of ref type which can consume more energy than a non-ref type","/BoundingBoxHelpers.cs","169","28","169","44"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExpandBoundingBox has a parameter of ref type which can consume more energy than a non-ref type","/BoundingBoxHelpers.cs","178","35","178","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExpandLocalBoundingBoxes has a parameter of ref type which can consume more energy than a non-ref type","/BoundingBoxHelpers.cs","193","35","193","58"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExpandBoundingBox has a parameter of ref type which can consume more energy than a non-ref type","/BoundingBoxHelpers.cs","223","35","223","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetLocalBoundingBoxForSweep<> has a parameter of ref type which can consume more energy than a non-ref type","/BoundingBoxHelpers.cs","264","35","264","70"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExpandBoundingBoxes has a parameter of ref type which can consume more energy than a non-ref type","/BoundingBoxHelpers.cs","116","28","116","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TestLeaf has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/BigCompound.cs","191","25","191","32"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddChildBoundsToBatcher has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/BigCompound.cs","63","21","63","43"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/BigCompound.cs","109","21","109","43"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/BigCompound.cs","120","28","120","50"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindLocalOverlaps<,> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/BigCompound.cs","169","28","169","73"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ValidateChildIndices has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Compound.cs","95","28","95","47"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddChildBoundsToBatcher has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Compound.cs","150","28","150","50"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayCast<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_RayCast.cs","114","37","114","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeBounds has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Shapes.cs","331","30","331","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Shapes.cs","343","30","343","52"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Shapes.cs","348","30","348","52"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOverlaps<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_VolumeQuery.cs","61","37","61","60"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Sweep<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_Sweep.cs","115","37","115","54"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Shapes.cs","62","30","62","52"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method OnRayHit has a parameter of ref type which can consume more energy than a non-ref type","/Simulation_Queries.cs","29","14","29","21"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeBounds has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Shapes.cs","56","30","56","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Shapes.cs","63","30","63","52"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeBounds has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Shapes.cs","219","30","219","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetBounds has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/IShape.cs","262","14","262","22"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeBounds has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Shapes.cs","284","30","284","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Shapes.cs","295","30","295","52"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Shapes.cs","300","30","300","52"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Shapes.cs","238","30","238","52"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Shapes.cs","246","37","246","59"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/IShape.cs","174","14","174","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/IShape.cs","182","14","182","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/IShape.cs","276","14","276","20"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetLocalChild has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/IShape.cs","206","14","206","26"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddChildBoundsToBatcher has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/IShape.cs","110","14","110","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetBounds has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Box.cs","211","21","211","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Box.cs","233","21","233","27"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetBounds has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Capsule.cs","224","21","224","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Capsule.cs","248","21","248","27"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Equals has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/CollidableReference.cs","141","21","141","26"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Hash has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/CollidableReference.cs","147","20","147","23"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddChildBoundsToBatcher has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Compound.cs","176","21","176","43"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Compound.cs","181","21","181","43"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method OnRayHit has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Compound.cs","32","21","32","28"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Compound.cs","208","28","208","50"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindLocalOverlaps<,> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Compound.cs","238","28","238","73"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetBounds has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/ConvexHull.cs","311","21","311","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/ConvexHull.cs","358","21","358","27"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeClosedInertia<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/MeshInertiaHelper.cs","140","28","140","64"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindExtremeFace has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/ConvexHullHelper.cs","85","21","85","35"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Equals has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/ConvexHullHelper.cs","367","25","367","30"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Hash has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/ConvexHullHelper.cs","373","24","373","27"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindNextIndexForFaceHull has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/ConvexHullHelper.cs","179","20","179","43"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ReduceFace has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/ConvexHullHelper.cs","243","21","243","30"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Swap<> has a parameter of ref type which can consume more energy than a non-ref type","/Helpers.cs","13","28","13","34"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetBounds has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Cylinder.cs","224","21","224","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Cylinder.cs","248","21","248","27"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/IShape.cs","123","14","123","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/IShape.cs","132","14","132","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TestLeaf has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Mesh.cs","28","21","28","28"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetLocalChild has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Mesh.cs","161","37","161","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Mesh.cs","230","37","230","59"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Mesh.cs","254","37","254","59"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindLocalOverlaps<,> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Mesh.cs","276","37","276","82"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeClosedInertia<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/MeshInertiaHelper.cs","163","28","163","64"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeClosedCenterOfMass<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/MeshInertiaHelper.cs","187","28","187","69"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeOpenInertia<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/MeshInertiaHelper.cs","304","28","304","62"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeOpenInertia<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/MeshInertiaHelper.cs","283","28","283","62"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeOpenCenterOfMass<> has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/MeshInertiaHelper.cs","327","31","327","70"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test<,,,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/WideRayTester.cs","16","35","16","86"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetBounds has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Sphere.cs","152","21","152","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Sphere.cs","175","21","175","27"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Triangle.cs","232","28","232","34"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetBounds has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Triangle.cs","203","21","203","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest has a parameter of ref type which can consume more energy than a non-ref type","/Collidables/Triangle.cs","258","21","258","27"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddStatic has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/BroadPhase.cs","96","20","96","28"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method EnsureCapacity has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/BroadPhase.cs","246","14","246","27"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ResizeCapacity has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/BroadPhase.cs","253","14","253","27"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Dispose has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/BroadPhase.cs","261","14","261","20"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Sweep<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/BroadPhase_Queries.cs","79","28","79","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Sweep<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/BroadPhase_Queries.cs","101","28","101","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOverlaps<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/BroadPhase_Queries.cs","125","28","125","58"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOverlaps<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/BroadPhase_Queries.cs","143","28","143","58"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TestLeaf has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/BroadPhase_Queries.cs","63","32","63","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Add has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/BroadPhase.cs","60","28","60","30"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RemoveAt has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/BroadPhase.cs","71","28","71","35"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExecuteRefineJob has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_MultithreadedRefitRefine.cs","330","32","330","47"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CreateRefitAndMarkJobs has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_MultithreadedRefitRefine.cs","44","32","44","53"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/BroadPhase_Queries.cs","18","21","18","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayCast<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/BroadPhase_Queries.cs","44","28","44","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayCast<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_RayCast.cs","92","39","92","58"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Sweep<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_Sweep.cs","84","39","84","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOverlaps<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_VolumeQuery.cs","83","37","83","60"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method UpdateConstraint<,,,,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhaseConstraintUpdate.cs","160","28","160","124"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method UpdateConstraintsForPair<,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhaseConstraintUpdate.cs","314","28","314","86"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddConstraint<,,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhasePendingConstraintAdds.cs","264","14","264","72"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExecutePreflushJob has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhasePreflush.cs","156","21","156","38"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TestLeafAgainstNode has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_SelfQueriesMT.cs","170","25","170","43"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CollectJobsInNode has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_SelfQueriesMT.cs","256","25","256","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method DispatchTestForLeaf has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_IntertreeQueriesMT.cs","167","25","167","43"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TestLeafAgainstNode has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_IntertreeQueriesMT.cs","192","25","192","43"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method DispatchTestForNodes has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_IntertreeQueriesMT.cs","216","25","216","44"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetJobsBetweenDifferentNodes has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_IntertreeQueriesMT.cs","246","25","246","52"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddDirectly has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionBatcher.cs","174","21","174","31"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CacheShapes has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionBatcher.cs","236","21","236","31"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ProcessEmptyResult has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionBatcher.cs","379","28","379","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ProcessUntestedSubpairConvexResult has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionBatcher.cs","392","28","392","61"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetSelfOverlaps<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_SelfQueries.cs","140","28","140","59"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOverlaps<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_IntertreeQueries.cs","136","28","136","55"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RedistributeImpulses<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhaseConstraintUpdate.cs","95","29","95","66"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RequestAddConstraint<,,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhaseConstraintUpdate.cs","148","21","148","86"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method UpdateConstraintForManifold<,,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhaseConstraintUpdate.cs","274","21","274","96"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddBatchEntries has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhase.cs","494","29","494","43"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildSortingTargets has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhasePreflush.cs","131","21","131","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method PrepareJobs has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_SelfQueriesMT.cs","72","25","72","35"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method DispatchTestForLeaf has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_SelfQueriesMT.cs","155","25","155","43"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method DispatchTestForNodes has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_SelfQueriesMT.cs","194","25","194","44"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetJobsBetweenDifferentNodes has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_SelfQueriesMT.cs","224","25","224","52"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method PrepareJobs has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_IntertreeQueriesMT.cs","43","32","43","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AllocatePair<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionBatcher.cs","75","26","75","44"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Add has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionBatcher.cs","88","29","88","31"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ProcessConvexResult has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionBatcher.cs","334","28","334","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ContributeChildToContinuation<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionBatcherContinuations.cs","163","28","163","68"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ContributeUntestedChildToContinuation<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionBatcherContinuations.cs","176","28","176","76"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExecuteBatch<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTaskRegistry.cs","66","30","66","53"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method OnPairCompleted<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTaskRegistry.cs","11","21","11","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method OnChildPairCompleted has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTaskRegistry.cs","20","21","20","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method OnUntestedChildCompleted<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionBatcherContinuations.cs","37","21","37","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method OnChildCompleted<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionBatcherContinuations.cs","29","21","29","48"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TryFlush<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionBatcherContinuations.cs","47","21","47","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxConvexHullTester.cs","14","28","14","31"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxConvexHullTester.cs","341","21","341","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxConvexHullTester.cs","346","21","346","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ConvexCollisionTask.cs","23","14","23","17"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ConvexCollisionTask.cs","24","14","24","17"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ForceFillSlot has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/DepthRefiner.cs","78","21","78","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetNextNormal<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/DepthRefiner.cs","99","21","99","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindMinimumDepth has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/DepthRefiner.cs","322","28","322","43"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindMinimumDepth has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/DepthRefiner.cs","336","28","336","43"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindSupport has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/DepthRefiner.cs","393","28","393","38"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ForceFillSlot has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/DepthRefiner.cs","433","21","433","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetNextNormal<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/DepthRefiner.cs","458","21","458","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindMinimumDepth has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/DepthRefiner.cs","692","28","692","43"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindMinimumDepth has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/DepthRefiner.cs","706","28","706","43"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method PickRepresentativeFace has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ConvexHullTestHelper.cs","12","28","12","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Reduce has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ManifoldCandidateHelper.cs","316","35","316","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ConvexCollisionTask.cs","22","14","22","17"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindSupport has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/DepthRefiner.cs","42","28","42","38"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FillSlot has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/DepthRefiner.cs","68","21","68","28"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FillSlot has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/DepthRefiner.cs","422","21","422","28"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TryAddInteriorPoint has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxCylinderTester.cs","85","21","85","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxCylinderTester.cs","389","21","389","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxCylinderTester.cs","394","21","394","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddCandidateForEdge has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxCylinderTester.cs","38","30","38","48"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxCylinderTester.cs","103","28","103","31"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddCandidate has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ManifoldCandidateHelper.cs","28","28","28","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Reduce has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ManifoldCandidateHelper.cs","270","28","270","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TestEdgeEdge has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxPairTester.cs","16","21","16","32"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TestFace has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxPairTester.cs","83","21","83","28"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Select has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxPairTester.cs","92","21","92","26"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddBoxAVertices has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxPairTester.cs","135","29","135","43"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddContactsForEdge has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxPairTester.cs","223","29","223","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CreateEdgeContacts has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxPairTester.cs","245","29","245","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TransformContactToManifold has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxPairTester.cs","530","29","530","54"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxPairTester.cs","542","21","542","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxPairTester.cs","547","21","547","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddBoxAVertex has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxPairTester.cs","104","21","104","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxPairTester.cs","325","28","325","31"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Select has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxTriangleTester.cs","89","21","89","26"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Select has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxTriangleTester.cs","98","21","98","26"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ClipTriangleEdgeAgainstBoxFace has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxTriangleTester.cs","146","29","146","58"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ClipTriangleEdgesAgainstBoxFace has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxTriangleTester.cs","192","29","192","59"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddBoxVertex has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxTriangleTester.cs","221","21","221","32"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddBoxVertices has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxTriangleTester.cs","256","29","256","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxTriangleTester.cs","704","21","704","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxTriangleTester.cs","709","21","709","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Add has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxTriangleTester.cs","111","21","111","23"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/BoxTriangleTester.cs","281","28","281","31"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Prepare has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CapsuleBoxTester.cs","14","30","14","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TestAndRefineBoxEdge has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CapsuleBoxTester.cs","114","21","114","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TestBoxFace has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CapsuleBoxTester.cs","139","21","139","31"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Select has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CapsuleBoxTester.cs","149","21","149","26"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Select has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CapsuleBoxTester.cs","163","21","163","26"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CapsuleBoxTester.cs","347","21","347","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CapsuleBoxTester.cs","352","21","352","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TestBoxEdge has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CapsuleBoxTester.cs","43","30","43","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CapsuleBoxTester.cs","177","21","177","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CapsuleConvexHullTester.cs","14","21","14","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CapsuleConvexHullTester.cs","182","21","182","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CapsuleConvexHullTester.cs","187","21","187","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CapsuleCylinderTester.cs","348","21","348","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CapsuleCylinderTester.cs","353","21","353","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CapsuleCylinderTester.cs","135","21","135","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CapsulePairTester.cs","14","21","14","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CapsulePairTester.cs","131","21","131","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CapsulePairTester.cs","136","21","136","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CapsuleTriangleTester.cs","380","21","380","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CapsuleTriangleTester.cs","385","21","385","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CapsuleTriangleTester.cs","109","21","109","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CreateContinuation<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CompoundMeshContinuations.cs","15","42","15","71"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ConfigureContinuationChild<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CompoundMeshContinuations.cs","61","28","61","65"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetChildAData<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CompoundPairCollisionTask.cs","24","14","24","38"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ConfigureContinuationChild<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CompoundPairCollisionTask.cs","27","14","27","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetChildAData<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CompoundMeshContinuations.cs","49","28","49","52"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CreateContinuation<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CompoundPairCollisionTask.cs","21","27","21","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindLocalOverlaps<,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ConvexCompoundOverlapFinder.cs","18","21","18","66"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindLocalOverlaps has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CompoundPairCollisionTask.cs","14","14","14","30"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExecuteBatch<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CompoundPairCollisionTask.cs","49","37","49","60"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CreateContinuation<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CompoundPairContinuations.cs","14","39","14","68"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ConfigureContinuationChild<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CompoundPairContinuations.cs","34","28","34","65"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetChildAData<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CompoundPairContinuations.cs","22","28","22","52"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindLocalOverlaps has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CompoundPairOverlapFinder.cs","23","28","23","44"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyFlipMask has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ConvexCollisionTask.cs","29","14","29","26"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ReadFirst has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ConvexCollisionTask.cs","30","14","30","22"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExecuteBatch<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ConvexCollisionTask.cs","50","37","50","60"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetSpeculativeMargin has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","145","27","145","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOffsetB has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","150","25","150","34"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOrientationA has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","148","28","148","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOrientationB has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","149","28","149","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFlipMask has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","144","25","144","35"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetShapeA has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","146","25","146","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetShapeB has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","147","25","147","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContinuation has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","25","30","25","44"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CreateContinuation<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ConvexCompoundCollisionTask.cs","16","27","16","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ConfigureContinuationChild<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ConvexCompoundCollisionTask.cs","19","14","19","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExecuteBatch<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ConvexCompoundCollisionTask.cs","41","37","41","60"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindLocalOverlaps has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ConvexCompoundOverlapFinder.cs","27","14","27","30"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CreateContinuation<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ConvexCompoundContinuations.cs","11","39","11","68"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ConfigureContinuationChild<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ConvexCompoundContinuations.cs","19","28","19","65"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindLocalOverlaps has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ConvexCompoundOverlapFinder.cs","35","28","35","44"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ConvexHullPairTester.cs","20","28","20","31"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ConvexHullPairTester.cs","226","21","226","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ConvexHullPairTester.cs","231","21","231","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CreateContinuation<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ConvexMeshContinuations.cs","11","41","11","70"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ConfigureContinuationChild<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ConvexMeshContinuations.cs","29","28","29","65"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CylinderConvexHullTester.cs","410","21","410","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CylinderConvexHullTester.cs","415","21","415","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method InsertContact has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CylinderConvexHullTester.cs","67","21","67","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CylinderConvexHullTester.cs","84","28","84","31"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CylinderPairTester.cs","450","21","450","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CylinderPairTester.cs","455","21","455","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TransformContact has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CylinderPairTester.cs","79","30","79","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/CylinderPairTester.cs","98","21","98","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddCandidateWithDepth has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ManifoldCandidateHelper.cs","63","28","63","48"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method SquishMaximumContactCount has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ManifoldCandidateHelper.cs","98","29","98","53"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method InternalReduce has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ManifoldCandidateHelper.cs","154","29","154","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ReduceWithoutComputingDepths has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ManifoldCandidateHelper.cs","280","28","280","55"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeDepthsForReduction has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ManifoldCandidateHelper.cs","119","21","119","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method PlaceCandidateInSlot has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ManifoldCandidateHelper.cs","290","28","290","47"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RemoveCandidateAt has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/ManifoldCandidateHelper.cs","305","28","305","44"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ConfigureContinuationChild<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/MeshPairContinuations.cs","65","28","65","65"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CreateContinuation<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/MeshPairContinuations.cs","17","42","17","71"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetChildAData<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/MeshPairContinuations.cs","53","28","53","52"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindLocalOverlaps has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/MeshPairOverlapFinder.cs","18","28","18","44"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContinuation has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","45","37","45","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContinuation has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","64","37","64","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContinuation has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","81","37","81","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContinuation has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","103","37","103","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContinuation has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","131","37","131","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFlipMask has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","182","32","182","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetSpeculativeMargin has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","187","34","187","53"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetShapeA has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","193","32","193","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetShapeB has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","198","32","198","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOffsetB has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","203","32","203","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOrientationA has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","208","35","208","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOrientationB has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","213","35","213","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFlipMask has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","258","32","258","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetSpeculativeMargin has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","263","34","263","53"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetShapeA has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","269","31","269","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetShapeB has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","274","31","274","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOffsetB has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","279","32","279","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOrientationA has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","284","35","284","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOrientationB has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","289","35","289","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFlipMask has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","337","32","337","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetSpeculativeMargin has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","342","34","342","53"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetShapeA has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","348","31","348","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetShapeB has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","353","31","353","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOffsetB has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","358","32","358","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOrientationA has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","362","35","362","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOrientationB has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","367","35","367","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFlipMask has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","404","32","404","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetSpeculativeMargin has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","409","34","409","53"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetShapeA has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","415","31","415","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetShapeB has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","420","31","420","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOffsetB has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","425","32","425","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOrientationA has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","429","35","429","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOrientationB has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/PairTypes.cs","433","35","433","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/SphereBoxTester.cs","14","21","14","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/SphereBoxTester.cs","20","21","20","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/SphereBoxTester.cs","67","21","67","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/SphereCapsuleTester.cs","14","21","14","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/SphereCapsuleTester.cs","20","21","20","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/SphereCapsuleTester.cs","51","21","51","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/SphereConvexHullTester.cs","13","21","13","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/SphereConvexHullTester.cs","18","21","18","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/SphereConvexHullTester.cs","48","21","48","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/SphereCylinderTester.cs","13","21","13","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/SphereCylinderTester.cs","40","21","40","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/SphereCylinderTester.cs","75","21","75","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/SpherePairTester.cs","14","21","14","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/SpherePairTester.cs","19","21","19","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/SpherePairTester.cs","25","21","25","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/SphereTriangleTester.cs","14","21","14","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Select has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/SphereTriangleTester.cs","21","21","21","26"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/SphereTriangleTester.cs","29","21","29","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/SphereTriangleTester.cs","123","21","123","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/TriangleConvexHullTester.cs","16","28","16","31"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/TriangleConvexHullTester.cs","435","21","435","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/TriangleConvexHullTester.cs","440","21","440","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TryAddInteriorPoint has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/TriangleCylinderTester.cs","45","21","45","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/TriangleCylinderTester.cs","597","21","597","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/TriangleCylinderTester.cs","602","21","602","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/TriangleCylinderTester.cs","102","28","102","31"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TestVertexNormal has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/TrianglePairTester.cs","47","21","47","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Select has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/TrianglePairTester.cs","88","21","88","26"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Select has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/TrianglePairTester.cs","97","21","97","26"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ClipBEdgeAgainstABounds has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/TrianglePairTester.cs","171","29","171","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/TrianglePairTester.cs","526","21","526","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/TrianglePairTester.cs","531","21","531","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TryAddTriangleAVertex has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/TrianglePairTester.cs","109","29","109","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CollisionTasks/TrianglePairTester.cs","261","28","261","31"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method OnUntestedChildCompleted<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CompoundMeshReduction.cs","43","21","43","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TryFlush<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CompoundMeshReduction.cs","48","28","48","47"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method OnChildCompleted<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/CompoundMeshReduction.cs","36","28","36","55"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method OnChildCompleted<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NonconvexReduction.cs","327","28","327","55"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method OnUntestedChildCompleted<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NonconvexReduction.cs","335","21","335","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ReduceManifolds has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/MeshReduction.cs","297","35","297","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Flush<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NonconvexReduction.cs","250","28","250","44"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Compare has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ConstraintRemover.cs","222","24","222","30"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Compare has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ConstraintRemover.cs","234","24","234","30"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Compare has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ConstraintRemover.cs","438","24","438","30"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RemoveOneBodyReferenceFromDynamicsSet has a parameter of ref type which can consume more energy than a non-ref type","/SequentialFallbackBatch.cs","99","30","99","66"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TryRemoveDynamicBodyFromFallback has a parameter of ref type which can consume more energy than a non-ref type","/Solver.cs","1578","23","1578","54"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Remove has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","70","30","70","35"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RemoveTypeBatchIfEmpty has a parameter of ref type which can consume more energy than a non-ref type","/ConstraintBatch.cs","170","21","170","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RemoveBatchIfEmpty has a parameter of ref type which can consume more energy than a non-ref type","/Solver.cs","1295","23","1295","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ScatterNewImpulses<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","55","28","55","63"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FlushSequentially<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","92","30","92","58"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExtractContactPrestepAndImpulses<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","130","21","130","64"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExtractContactPrestepAndImpulses<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","141","30","141","73"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method DeterministicallyAdd<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","193","30","193","61"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FlushSequentially<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","203","30","203","58"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FlushWithSpeculativeBatches<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","209","30","209","68"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method UpdateConstraint<,,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","216","38","216","100"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method UpdateConstraintForManifold<,,,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","285","30","285","121"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExtractContactData<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","310","30","310","59"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExtractContactPrestepAndImpulses<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","324","30","324","73"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyContactData has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","228","31","228","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyContactData has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","248","31","248","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyContactData has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","264","31","264","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method UpdateConstraintForManifold<,,,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","344","30","344","121"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExtractContactData<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","368","30","368","59"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExtractContactPrestepAndImpulses<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","393","30","393","73"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method UpdateConstraintForManifold<,,,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","413","30","413","121"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExtractContactData<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","426","30","426","59"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExtractContactPrestepAndImpulses<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","440","30","440","73"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method UpdateConstraintForManifold<,,,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","460","30","460","121"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExtractContactData<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","473","30","473","59"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExtractContactPrestepAndImpulses<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","498","30","498","73"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GatherOldImpulses has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","30","28","30","44"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method DeterministicallyAdd<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","83","30","83","61"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FlushWithSpeculativeBatches<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","88","30","88","68"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method UpdateConstraintForManifold<,,,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","95","37","95","128"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExtractContactData<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","109","21","109","50"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExtractContactData<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactConstraintAccessor.cs","120","30","120","59"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyManifoldWideProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/IContactConstraintDescription.cs","17","14","17","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyManifoldWideProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/IContactConstraintDescription.cs","23","14","23","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyManifoldWideProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/IContactConstraintDescription.cs","51","14","51","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyManifoldWideProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/IContactConstraintDescription.cs","60","14","60","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddConstraint<,,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhasePendingConstraintAdds.cs","49","32","49","90"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method SequentialAddToSimulation<,,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhasePendingConstraintAdds.cs","64","39","64","109"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method SequentialAddToSimulationSpeculative<,,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhasePendingConstraintAdds.cs","149","39","149","120"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FlushWithSpeculativeBatches has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhasePendingConstraintAdds.cs","170","27","170","53"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method DeterministicAdd<,,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhasePendingConstraintAdds.cs","181","39","181","100"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddToSimulationSpeculative<,,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhasePendingConstraintAdds.cs","97","32","97","103"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/IConstraintDescription.cs","25","14","25","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFirstContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/IContactConstraintDescription.cs","18","35","18","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ConvexOneBody<,> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ISolverContactDataExtractor.cs","16","14","16","58"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ConvexOneBody<,> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ISolverContactDataExtractor.cs","73","14","73","58"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/IConstraintDescription.cs","35","14","35","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFirstContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/IContactConstraintDescription.cs","24","35","24","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ConvexTwoBody<,> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ISolverContactDataExtractor.cs","29","14","29","58"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ConvexTwoBody<,> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ISolverContactDataExtractor.cs","84","14","84","58"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFirstContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/IContactConstraintDescription.cs","55","44","55","58"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method NonconvexOneBody<,> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ISolverContactDataExtractor.cs","42","14","42","61"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method NonconvexOneBody<,> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ISolverContactDataExtractor.cs","96","14","96","61"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFirstContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/IContactConstraintDescription.cs","64","44","64","58"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method NonconvexTwoBody<,> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ISolverContactDataExtractor.cs","55","14","55","61"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method NonconvexTwoBody<,> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ISolverContactDataExtractor.cs","107","14","107","61"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetCommonProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/IContactConstraintDescription.cs","54","58","54","76"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetCommonProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/IContactConstraintDescription.cs","63","58","63","76"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetDepth has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactManifold.cs","99","19","99","26"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetNormal has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactManifold.cs","107","21","107","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOffset has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactManifold.cs","115","21","115","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFeatureId has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactManifold.cs","123","17","123","28"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Add has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactManifold.cs","210","28","210","30"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetDepth has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactManifold.cs","233","26","233","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetNormal has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactManifold.cs","245","28","245","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOffset has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactManifold.cs","258","28","258","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFeatureId has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactManifold.cs","270","24","270","35"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FastRemoveAt has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactManifold.cs","348","28","348","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetDepth has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactManifold.cs","364","26","364","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetNormal has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactManifold.cs","376","28","376","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOffset has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactManifold.cs","389","28","389","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFeatureId has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ContactManifold.cs","401","24","401","35"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyFlipMask has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ConvexContactManifoldWide.cs","71","21","71","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ReadFirst has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ConvexContactManifoldWide.cs","84","21","84","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyFlipMask has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ConvexContactManifoldWide.cs","139","21","139","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ReadFirst has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ConvexContactManifoldWide.cs","156","21","156","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyFlipMask has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ConvexContactManifoldWide.cs","21","21","21","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ReadFirst has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/ConvexContactManifoldWide.cs","32","21","32","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CreateJobs has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/FreshnessChecker.cs","21","21","21","30"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AllowContactGeneration has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/INarrowPhaseCallbacks.cs","63","14","63","35"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ConfigureContactManifold<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/INarrowPhaseCallbacks.cs","74","14","74","48"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ConfigureContactManifold has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/INarrowPhaseCallbacks.cs","103","14","103","37"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyToBuilderCache has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/InactiveSetBuilder.cs","79","27","79","44"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Add has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/InactiveSetBuilder.cs","88","20","88","22"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyExistingLists has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/InactiveSetBuilder.cs","113","21","113","37"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method OnUntestedChildCompleted<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/MeshReduction.cs","50","21","50","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TryFlush<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/MeshReduction.cs","513","28","513","47"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method OnChildCompleted<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/MeshReduction.cs","43","28","43","55"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeMeshSpaceContact has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/MeshReduction.cs","56","36","56","58"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TryApplyBlockToTriangle has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/MeshReduction.cs","246","21","246","43"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TryExtractSolverContactPrestepAndImpulses<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhase.cs","157","21","157","73"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExecuteFlushJob has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhase.cs","210","14","210","28"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Initialize has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhaseCCDContinuations.cs","42","29","42","38"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Initialize has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhaseCCDContinuations.cs","57","29","57","38"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddContinuous has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhaseCCDContinuations.cs","123","41","123","53"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method OnPairCompleted<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhaseCCDContinuations.cs","130","32","130","57"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Compare has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhasePreflush.cs","125","31","125","37"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TryExtractSolverContactData<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhase.cs","139","21","139","59"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method PrepareFlushJobs has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/PairCache.cs","214","21","214","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Sweep<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTaskRegistry.cs","75","28","75","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddDiscrete has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhaseCCDContinuations.cs","117","41","117","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method OnChildPairCompleted has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NarrowPhaseCCDContinuations.cs","220","32","220","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IndexOf has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/PairCache.cs","351","20","351","26"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Update<,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/PairCache.cs","373","30","373","70"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Add<,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/PairCache.cs","363","40","363","77"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CompleteConstraintAdd<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/PairCache.cs","413","30","413","68"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetBlockingBodyHandles has a parameter of ref type which can consume more energy than a non-ref type","/Solver.cs","1059","30","1059","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AccumulateUniqueIndices has a parameter of ref type which can consume more energy than a non-ref type","/IslandAwakener.cs","410","23","410","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method PrepareJobs has a parameter of ref type which can consume more energy than a non-ref type","/IslandAwakener.cs","507","70","507","80"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method DisposeForCompletedAwakenings has a parameter of ref type which can consume more energy than a non-ref type","/IslandAwakener.cs","803","23","803","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddContact has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NonconvexReduction.cs","43","28","43","37"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method UseContact has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NonconvexReduction.cs","61","28","61","37"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TryFlush<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/NonconvexReduction.cs","341","21","341","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Equals has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/PairCache.cs","44","21","44","26"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Hash has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/PairCache.cs","50","20","50","23"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AccumulateMinimumSizes has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/WorkerPairCache.cs","103","21","103","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Add<,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/WorkerPairCache.cs","156","31","156","58"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Update<,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/WorkerPairCache.cs","166","21","166","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ValidateConstraintHandleToPairMapping has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/PairCache_Activity.cs","55","30","55","66"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method SleepTypeBatchPairs has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/PairCache_Activity.cs","88","30","88","48"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyCacheForAwakening has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/PairCache_Activity.cs","143","39","143","59"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/RayBatchers.cs","16","14","16","20"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/RayBatchers.cs","34","25","34","31"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/RayBatchers.cs","140","32","140","38"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method OnRayHit has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/RayBatchers.cs","132","36","132","43"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Add has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/RayBatchers.cs","182","21","182","23"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Add has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/RayBatchers.cs","74","21","74","23"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Add has a parameter of ref type which can consume more energy than a non-ref type","/Trees/RayBatcher.cs","528","21","528","23"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TestRays<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/RayBatcher.cs","418","28","418","48"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method OnRayHit has a parameter of ref type which can consume more energy than a non-ref type","/Simulation_Queries.cs","59","14","59","21"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method PreorderedTypeSweep<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTaskRegistry.cs","68","40","68","72"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method SelectForEdge has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/CapsuleBoxDistanceTester.cs","155","29","155","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Select has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/CapsuleBoxDistanceTester.cs","166","29","166","34"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Select has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/CapsuleBoxDistanceTester.cs","176","29","176","34"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetEdgeClosestPoint has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/CapsuleBoxDistanceTester.cs","32","21","32","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method PreorderedTypeSweep<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/CompoundHomogeneousCompoundSweepTask.cs","22","40","22","72"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindOverlaps has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/CompoundPairSweepOverlapFinder.cs","12","21","12","32"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindOverlaps has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/CompoundPairSweepOverlapFinder.cs","21","28","21","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method PreorderedTypeSweep<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/CompoundPairSweepTask.cs","20","40","20","72"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindOverlaps has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/ConvexCompoundSweepOverlapFinder.cs","15","21","15","32"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindOverlaps has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/ConvexCompoundSweepOverlapFinder.cs","23","28","23","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method PreorderedTypeSweep<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/ConvexCompoundSweepTask.cs","21","40","21","72"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method PreorderedTypeSweep<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/ConvexHomogeneousCompoundSweepTask.cs","26","40","26","72"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetSampleTimes has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/ConvexSweepTaskCommon.cs","102","21","102","34"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Sweep<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/ConvexSweepTaskCommon.cs","271","28","271","48"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ConstructSamples has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/ConvexSweepTaskCommon.cs","118","18","118","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetNonlinearVelocityContribution has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/ConvexSweepTaskCommon.cs","121","18","121","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AdjustHitLocation has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/ConvexSweepTaskCommon.cs","124","18","124","34"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AdjustHitLocation has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/ConvexSweepTaskCommon.cs","130","25","130","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ConstructSamples has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/ConvexSweepTaskCommon.cs","136","25","136","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetNonlinearVelocityContribution has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/ConvexSweepTaskCommon.cs","165","25","165","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AdjustHitLocation has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/ConvexSweepTaskCommon.cs","187","25","187","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ConstructSamples has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/ConvexSweepTaskCommon.cs","195","25","195","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetNonlinearVelocityContribution has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/ConvexSweepTaskCommon.cs","248","25","248","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method PreorderedTypeSweep<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/ConvexSweepTaskCommon.cs","45","40","45","72"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Append has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/GJKDistanceTester.cs","50","21","50","26"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Edge has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/GJKDistanceTester.cs","83","21","83","24"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TryRemove has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/GJKDistanceTester.cs","110","29","110","37"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Triangle has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/GJKDistanceTester.cs","144","21","144","28"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindClosestPoint has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/GJKDistanceTester.cs","203","21","203","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method SampleMinkowskiDifference has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/GJKDistanceTester.cs","23","21","23","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Select has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/SweepTasks/GJKDistanceTester.cs","71","21","71","26"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Add<> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/UntypedList.cs","133","27","133","32"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WorkerCacheAdd<,> has a parameter of ref type which can consume more energy than a non-ref type","/CollisionDetection/WorkerPairCache.cs","144","29","144","67"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetTargetCapacity has a parameter of ref type which can consume more energy than a non-ref type","/ConstraintBatch.cs","221","20","221","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Initialize has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","201","30","201","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Resize has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","202","30","202","35"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularAxisGearMotor.cs","53","30","53","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularAxisGearMotor.cs","73","28","73","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularAxisGearMotor.cs","90","21","90","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularAxisGearMotor.cs","113","21","113","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwoBodyTypeProcessor.cs","33","14","33","18"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwoBodyTypeProcessor.cs","40","14","40","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwoBodyTypeProcessor.cs","212","37","212","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwoBodyTypeProcessor.cs","237","37","237","65"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ScaleAccumulatedImpulses has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","258","37","258","60"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddBodyReferencesLane has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","284","35","284","55"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RemoveBodyReferencesLane has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","302","35","302","58"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetInnerIndexForFallbackAllocation has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","363","35","363","68"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ValidateEmptyFallbackSlots has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","387","14","387","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ValidateFallbackAccessSafety has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","398","14","398","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ValidateAccumulatedImpulses has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","436","14","436","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AllocateInTypeBatchForFallback has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","452","43","452","72"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Remove has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","635","37","635","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method InternalResize has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","767","14","767","27"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Initialize has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","781","30","781","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Resize has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","790","30","790","35"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method UpdateForBodyMemoryMove has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","808","37","808","59"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GenerateSortKeysAndCopyReferences<> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","823","24","823","75"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method VerifySortRegion<> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","842","24","842","58"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Regather has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","878","39","878","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddWakingBodyHandlesToBatchReferences has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","1100","46","1100","82"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetBodyReferenceCount has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","1123","31","1123","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IntegratePoseAndVelocity<> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","1207","35","1207","80"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IntegrateVelocity<,> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","1254","35","1254","96"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GatherAndIntegrate<,,,> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","1289","35","1289","135"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularAxisGearMotor.cs","42","30","42","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularAxisGearMotor.cs","80","21","80","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwoBodyTypeProcessor.cs","31","14","31","22"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GenerateSortKeysAndCopyReferences has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwoBodyTypeProcessor.cs","94","39","94","71"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GenerateSortKeysAndCopyReferences has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","167","32","167","64"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method VerifySortRegion has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwoBodyTypeProcessor.cs","107","39","107","54"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method VerifySortRegion has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","198","32","198","47"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart<,,> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwoBodyTypeProcessor.cs","173","37","173","113"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart<,,> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","204","30","204","106"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","210","30","210","34"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","216","29","216","57"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ScaleAccumulatedImpulses has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","151","30","151","53"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method SetBodyReferencesLane has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","270","35","270","55"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AllocateInTypeBatch has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","315","43","315","61"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AllocateInTypeBatch has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","59","36","59","54"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AllowFallbackBundleAllocation has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","339","36","339","64"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ProbeBundleForFallback has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","372","36","372","57"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AllocateInTypeBatchForFallback has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","69","36","69","65"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Move has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","579","31","579","34"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Scramble has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","595","44","595","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Scramble has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","163","30","163","37"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TransferConstraint has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","734","44","734","61"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TransferConstraint has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","134","37","134","54"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method UpdateForBodyMemoryMove has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","161","30","161","52"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyToCache has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","862","46","862","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyToCache has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","173","32","173","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Regather has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","179","32","179","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GatherActiveConstraints has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","910","46","910","68"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GatherActiveConstraints has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","185","39","185","61"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AddWakingBodyHandlesToBatchReferences has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","195","39","195","75"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetBodyReferenceCount has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","199","31","199","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WriteFirst has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/MotorSettings.cs","59","28","59","37"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ClampImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/ServoSettings.cs","118","28","118","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularAxisMotor.cs","52","30","52","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularAxisMotor.cs","72","28","72","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularAxisMotor.cs","88","21","88","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularAxisMotor.cs","105","21","105","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularAxisMotor.cs","41","30","41","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularAxisMotor.cs","79","21","79","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularHinge.cs","53","30","53","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularHinge.cs","114","29","114","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularHinge.cs","40","30","40","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularHinge.cs","133","21","133","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularHinge.cs","141","21","141","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularHinge.cs","222","21","222","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularMotor.cs","45","30","45","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularMotor.cs","62","21","62","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularMotor.cs","36","30","36","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularServo.cs","72","28","72","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularMotor.cs","67","21","67","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularMotor.cs","92","21","92","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ClampImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/ServoSettings.cs","140","28","140","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularServo.cs","51","30","51","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularServo.cs","40","30","40","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularServo.cs","100","21","100","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularServo.cs","105","21","105","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularServo.cs","136","21","136","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WriteFirst has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/SpringSettings.cs","15","28","15","37"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WriteFirst has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/ServoSettings.cs","154","28","154","37"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularSwivelHinge.cs","53","30","53","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularSwivelHinge.cs","74","29","74","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularSwivelHinge.cs","104","21","104","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularSwivelHinge.cs","147","21","147","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularSwivelHinge.cs","40","30","40","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AngularSwivelHinge.cs","96","21","96","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AreaConstraint.cs","61","30","61","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AreaConstraint.cs","79","29","79","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AreaConstraint.cs","133","21","133","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AreaConstraint.cs","171","21","171","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/ThreeBodyTypeProcessor.cs","33","14","33","18"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/ThreeBodyTypeProcessor.cs","43","14","43","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/ThreeBodyTypeProcessor.cs","146","37","146","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/ThreeBodyTypeProcessor.cs","171","37","171","65"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AreaConstraint.cs","51","30","51","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/AreaConstraint.cs","123","21","123","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/ThreeBodyTypeProcessor.cs","28","14","28","22"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GenerateSortKeysAndCopyReferences has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/ThreeBodyTypeProcessor.cs","84","39","84","71"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method VerifySortRegion has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/ThreeBodyTypeProcessor.cs","97","39","97","54"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart<,,> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/ThreeBodyTypeProcessor.cs","102","37","102","113"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/BallSocket.cs","50","30","50","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/BallSocket.cs","68","21","68","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/BallSocket.cs","40","30","40","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/BallSocketShared.cs","77","28","77","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/BallSocket.cs","76","21","76","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/BallSocket.cs","95","21","95","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/BallSocketShared.cs","115","28","115","32"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/BallSocketMotor.cs","53","30","53","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/BallSocketMotor.cs","72","21","72","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/BallSocketMotor.cs","43","30","43","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/BallSocketMotor.cs","78","21","78","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/BallSocketMotor.cs","94","21","94","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/BallSocketShared.cs","126","28","126","32"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/BallSocketServo.cs","56","30","56","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/BallSocketServo.cs","77","21","77","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/BallSocketServo.cs","45","30","45","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/BallSocketServo.cs","84","21","84","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/BallSocketServo.cs","102","21","102","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeCorrectiveImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/BallSocketShared.cs","96","28","96","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/CenterDistanceConstraint.cs","54","30","54","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/CenterDistanceConstraint.cs","72","28","72","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/CenterDistanceConstraint.cs","97","21","97","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/CenterDistanceConstraint.cs","127","21","127","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/CenterDistanceConstraint.cs","44","30","44","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/CenterDistanceConstraint.cs","82","21","82","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/CenterDistanceLimit.cs","61","30","61","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/CenterDistanceLimit.cs","105","21","105","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/CenterDistanceLimit.cs","126","21","126","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/CenterDistanceLimit.cs","49","30","49","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/CenterDistanceLimit.cs","98","21","98","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ClampPositive has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/InequalityHelpers.cs","18","28","18","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetMaterialProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexCommon.cs","25","36","25","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetNormal has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexCommon.cs","33","25","33","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexCommon.cs","34","31","34","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOffsetB has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexCommon.cs","40","25","40","34"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetTangentFriction has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexCommon.cs","50","25","50","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetTwistFriction has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexCommon.cs","51","27","51","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetPenetrationImpulseForContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexCommon.cs","52","27","52","57"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetTangentFriction has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","18","32","18","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetTwistFriction has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","24","34","24","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetTangentFriction has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","45","32","45","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetTwistFriction has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","51","34","51","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetPenetrationImpulseForContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","56","34","56","64"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetTangentFriction has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","73","32","73","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetTwistFriction has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","79","34","79","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetPenetrationImpulseForContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","84","34","84","64"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetTangentFriction has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","102","32","102","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetTwistFriction has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","108","34","108","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetPenetrationImpulseForContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","113","34","113","64"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","220","30","220","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFirstContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","242","42","242","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetNormal has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","271","32","271","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","277","38","277","47"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetMaterialProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","283","43","283","63"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","296","21","296","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","311","21","311","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyTypeProcessor.cs","20","14","20","18"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyTypeProcessor.cs","27","14","27","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyTypeProcessor.cs","119","37","119","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyTypeProcessor.cs","140","37","140","65"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","350","30","350","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","365","30","365","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyManifoldWideProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","380","21","380","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFirstContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","389","42","389","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetNormal has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","419","32","419","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","425","38","425","47"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetMaterialProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","431","43","431","63"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","444","21","444","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","451","21","451","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","462","21","462","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyTypeProcessor.cs","18","14","18","22"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GenerateSortKeysAndCopyReferences has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyTypeProcessor.cs","58","39","58","71"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method VerifySortRegion has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyTypeProcessor.cs","71","39","71","54"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart<,,> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyTypeProcessor.cs","84","37","84","113"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","505","30","505","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","522","30","522","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyManifoldWideProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","539","21","539","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFirstContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","548","42","548","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetNormal has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","579","32","579","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","585","38","585","47"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetMaterialProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","591","43","591","63"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","604","21","604","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","612","21","612","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","624","21","624","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","670","30","670","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","689","30","689","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyManifoldWideProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","708","21","708","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFirstContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","717","42","717","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetNormal has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","749","32","749","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","755","38","755","47"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetMaterialProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","761","43","761","63"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","774","21","774","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","783","21","783","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","796","21","796","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","842","30","842","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","856","30","856","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyManifoldWideProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","871","21","871","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFirstContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","881","42","881","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetNormal has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","911","32","911","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","917","38","917","47"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetMaterialProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","923","43","923","63"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOffsetB has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","929","32","929","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","941","21","941","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","947","21","947","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","957","21","957","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","998","30","998","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1014","30","1014","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyManifoldWideProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1031","21","1031","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFirstContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1041","42","1041","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetNormal has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1072","32","1072","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1078","38","1078","47"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetMaterialProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1084","43","1084","63"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOffsetB has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1090","32","1090","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1102","21","1102","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1109","21","1109","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1121","21","1121","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1166","30","1166","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1184","30","1184","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyManifoldWideProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1203","21","1203","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFirstContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1213","42","1213","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetNormal has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1245","32","1245","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1251","38","1251","47"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetMaterialProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1257","43","1257","63"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOffsetB has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1263","32","1263","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1275","21","1275","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1283","21","1283","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1296","21","1296","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1344","30","1344","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1364","30","1364","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyManifoldWideProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1385","21","1385","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFirstContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1395","42","1395","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetNormal has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1428","32","1428","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1434","38","1434","47"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetMaterialProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1440","43","1440","63"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOffsetB has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1446","32","1446","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1458","21","1458","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1467","21","1467","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","1481","21","1481","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetPenetrationImpulseForContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","29","34","29","64"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","207","30","207","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyManifoldWideProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","233","21","233","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method UpdatePenetrationDepth has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/PenetrationLimitOneBody.cs","29","28","29","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactConvexTypes.cs","302","21","302","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method UpdatePenetrationDepth has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/PenetrationLimit.cs","31","28","31","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/TangentFrictionOneBody.cs","68","28","68","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/PenetrationLimitOneBody.cs","54","28","54","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/TwistFrictionOneBody.cs","44","28","44","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/PenetrationLimitOneBody.cs","62","28","62","32"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/TangentFrictionOneBody.cs","77","28","77","32"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/TwistFrictionOneBody.cs","50","28","50","32"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/TangentFriction.cs","108","28","108","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/PenetrationLimit.cs","69","28","69","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/TwistFriction.cs","44","28","44","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/PenetrationLimit.cs","80","28","80","32"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/TangentFriction.cs","119","28","119","32"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/TwistFriction.cs","51","28","51","32"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexCommon.cs","20","41","20","50"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOffsetB has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexCommon.cs","26","25","26","34"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetImpulsesForContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexCommon.cs","32","42","32","62"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyContactData has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexCommon.cs","39","29","39","43"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyOneBodyDescription<,> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexCommon.cs","83","28","83","74"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyContactData has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexCommon.cs","103","29","103","43"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildTwoBodyDescription<,> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexCommon.cs","116","28","116","74"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildOneBodyDescription<,> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexCommon.cs","141","28","141","74"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateContactData has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexCommon.cs","177","21","177","50"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexCommon.cs","202","21","202","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method UpdateForNewPose has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexCommon.cs","224","21","224","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexCommon.cs","232","21","232","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexCommon.cs","248","21","248","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexCommon.cs","265","21","265","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexCommon.cs","290","21","290","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyTwoBodyDescription<,> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexCommon.cs","58","28","58","74"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexCommon.cs","187","21","187","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","19","30","19","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetCommonProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","34","65","34","83"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFirstContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","40","51","40","65"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetMaterialProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","66","43","66","63"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOffsetB has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","72","32","72","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","78","48","78","57"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetImpulsesForContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","94","49","94","69"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","117","21","117","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","122","30","122","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyManifoldWideProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","128","21","128","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetCommonProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","136","65","136","83"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFirstContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","142","51","142","65"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetMaterialProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","167","43","167","63"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","173","48","173","57"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","201","21","201","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","206","30","206","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyManifoldWideProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","212","21","212","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetCommonProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","221","65","221","83"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFirstContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","227","51","227","65"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetMaterialProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","254","43","254","63"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOffsetB has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","260","32","260","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","266","48","266","57"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetImpulsesForContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","283","49","283","69"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","307","21","307","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","312","30","312","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyManifoldWideProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","318","21","318","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetCommonProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","326","65","326","83"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFirstContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","332","51","332","65"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetMaterialProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","358","43","358","63"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","364","48","364","57"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","393","21","393","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","398","30","398","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyManifoldWideProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","404","21","404","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetCommonProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","413","65","413","83"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFirstContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","419","51","419","65"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetMaterialProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","447","43","447","63"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOffsetB has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","453","32","453","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","459","48","459","57"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetImpulsesForContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","477","49","477","69"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","502","21","502","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","507","30","507","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyManifoldWideProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","513","21","513","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetCommonProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","521","65","521","83"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetFirstContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","527","51","527","65"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetMaterialProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","554","43","554","63"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetContact has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","560","48","560","57"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","14","21","14","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CopyManifoldWideProperties has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/ContactNonconvexTypes.cs","25","21","25","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeCorrectiveImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/PenetrationLimit.cs","12","28","12","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/PenetrationLimit.cs","48","28","48","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeCorrectiveImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/PenetrationLimitOneBody.cs","12","28","12","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/PenetrationLimitOneBody.cs","42","28","42","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/TangentFriction.cs","60","28","60","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeCorrectiveImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/TangentFriction.cs","78","28","78","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/TangentFrictionOneBody.cs","33","28","33","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeCorrectiveImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/TangentFrictionOneBody.cs","46","28","46","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/TwistFriction.cs","17","28","17","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeCorrectiveImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/TwistFriction.cs","28","28","28","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/TwistFrictionOneBody.cs","19","28","19","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeCorrectiveImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Contact/TwistFrictionOneBody.cs","28","28","28","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/DistanceLimit.cs","82","30","82","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/DistanceLimit.cs","106","28","106","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/DistanceLimit.cs","141","21","141","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/DistanceLimit.cs","148","21","148","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/DistanceLimit.cs","176","21","176","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/DistanceLimit.cs","67","30","67","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/DistanceServo.cs","86","30","86","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeJacobian has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/DistanceServo.cs","120","28","120","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/DistanceServo.cs","185","21","185","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/DistanceServo.cs","195","21","195","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/DistanceServo.cs","221","21","221","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/DistanceServo.cs","73","30","73","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeTransforms has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/DistanceServo.cs","133","28","133","44"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/DistanceServo.cs","170","28","170","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/FourBodyTypeProcessor.cs","29","14","29","22"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetSortKey has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/FourBodyTypeProcessor.cs","71","24","71","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GenerateSortKeysAndCopyReferences has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/FourBodyTypeProcessor.cs","89","39","89","71"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/FourBodyTypeProcessor.cs","155","37","155","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/FourBodyTypeProcessor.cs","182","37","182","65"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/FourBodyTypeProcessor.cs","35","14","35","18"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/FourBodyTypeProcessor.cs","46","14","46","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetSortKey has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","235","13","235","22"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method VerifySortRegion has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/FourBodyTypeProcessor.cs","102","39","102","54"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart<,,> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/FourBodyTypeProcessor.cs","107","37","107","113"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Hinge.cs","62","30","62","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Hinge.cs","92","29","92","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Hinge.cs","48","30","48","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Hinge.cs","116","21","116","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Hinge.cs","128","21","128","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Hinge.cs","221","21","221","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Prestep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Inequality1DOF.cs","52","28","52","34"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Inequality1DOF.cs","334","28","334","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeCorrectiveImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Inequality1DOF.cs","342","28","342","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Inequality1DOF.cs","368","28","368","32"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Inequality1DOF.cs","314","28","314","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/LinearAxisLimit.cs","67","30","67","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/LinearAxisLimit.cs","129","21","129","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/LinearAxisLimit.cs","150","21","150","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/LinearAxisLimit.cs","52","30","52","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/LinearAxisLimit.cs","121","21","121","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/LinearAxisServo.cs","180","28","180","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/LinearAxisMotor.cs","61","30","61","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/LinearAxisMotor.cs","84","21","84","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/LinearAxisMotor.cs","92","21","92","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/LinearAxisMotor.cs","109","21","109","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/LinearAxisMotor.cs","48","30","48","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/LinearAxisServo.cs","66","30","66","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Modify has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/LinearAxisServo.cs","93","18","93","23"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Modify has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/LinearAxisServo.cs","99","25","99","30"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeTransforms<> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/LinearAxisServo.cs","105","28","105","63"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeCorrectiveImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/LinearAxisServo.cs","165","28","165","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/LinearAxisServo.cs","218","21","218","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/LinearAxisServo.cs","226","21","226","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/LinearAxisServo.cs","247","21","247","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/LinearAxisServo.cs","52","30","52","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/LinearAxisServo.cs","151","28","151","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyAngularMotor.cs","45","30","45","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyAngularMotor.cs","63","28","63","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyAngularMotor.cs","36","30","36","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyAngularMotor.cs","69","21","69","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyAngularMotor.cs","74","21","74","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyAngularMotor.cs","91","21","91","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyAngularServo.cs","51","30","51","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyAngularServo.cs","71","28","71","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyAngularServo.cs","40","30","40","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyAngularServo.cs","78","21","78","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyAngularServo.cs","84","21","84","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyAngularServo.cs","107","21","107","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyLinearMotor.cs","50","30","50","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyLinearMotor.cs","69","21","69","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyLinearMotor.cs","40","30","40","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyLinearServo.cs","96","28","96","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyLinearMotor.cs","75","21","75","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyLinearMotor.cs","100","21","100","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyLinearServo.cs","55","30","55","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyLinearServo.cs","107","21","107","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyLinearServo.cs","114","21","114","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyLinearServo.cs","145","21","145","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyLinearServo.cs","44","30","44","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetSortKey has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/OneBodyTypeProcessor.cs","48","24","48","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/PointOnLineServo.cs","61","30","61","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/PointOnLineServo.cs","85","28","85","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/PointOnLineServo.cs","128","21","128","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/PointOnLineServo.cs","48","30","48","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/PointOnLineServo.cs","134","21","134","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/PointOnLineServo.cs","192","21","192","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ClampImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/ServoSettings.cs","126","28","126","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/SwingLimit.cs","68","30","68","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/SwingLimit.cs","95","29","95","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/SwingLimit.cs","124","21","124","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/SwingLimit.cs","168","21","168","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/SwingLimit.cs","49","30","49","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/SwingLimit.cs","116","21","116","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/SwivelHinge.cs","62","30","62","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/SwivelHinge.cs","86","29","86","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/SwivelHinge.cs","127","21","127","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/SwivelHinge.cs","48","30","48","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/SwivelHinge.cs","134","21","134","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/SwivelHinge.cs","213","21","213","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetSortKey has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/ThreeBodyTypeProcessor.cs","66","24","66","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwistLimit.cs","64","30","64","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwistLimit.cs","112","21","112","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwistLimit.cs","135","21","135","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwistLimit.cs","50","30","50","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwistLimit.cs","104","21","104","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwistServo.cs","160","28","160","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwistMotor.cs","57","30","57","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwistMotor.cs","98","21","98","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwistMotor.cs","124","21","124","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwistMotor.cs","44","30","44","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwistMotor.cs","90","21","90","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwistServo.cs","64","30","64","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwistServo.cs","191","21","191","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwistServo.cs","220","21","220","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwistServo.cs","50","30","50","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwistServo.cs","183","21","183","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetSortKey has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TwoBodyTypeProcessor.cs","63","24","63","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method EnumerateAccumulatedImpulses<> has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","138","28","138","68"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetCountInBundle has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/TypeProcessor.cs","222","29","222","44"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IntegrateAngularVelocityConserveMomentum has a parameter of ref type which can consume more energy than a non-ref type","/PoseIntegrator.cs","194","28","194","67"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IntegrateAngularVelocityConserveMomentumWithGyroscopicTorque has a parameter of ref type which can consume more energy than a non-ref type","/PoseIntegrator.cs","210","28","210","87"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IntegrateVelocity has a parameter of ref type which can consume more energy than a non-ref type","/PoseIntegrator.cs","92","14","92","30"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/VolumeConstraint.cs","61","30","61","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/VolumeConstraint.cs","79","29","79","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/VolumeConstraint.cs","115","21","115","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/VolumeConstraint.cs","177","21","177","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/VolumeConstraint.cs","52","30","52","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/VolumeConstraint.cs","108","21","108","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Weld.cs","60","30","60","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyImpulse has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Weld.cs","86","29","86","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStart has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Weld.cs","116","21","116","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Weld.cs","47","30","47","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Solve has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Weld.cs","123","21","123","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IncrementallyUpdateForSubstep has a parameter of ref type which can consume more energy than a non-ref type","/Constraints/Weld.cs","215","21","215","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Hash has a parameter of ref type which can consume more energy than a non-ref type","/Handles.cs","58","20","58","23"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Equals has a parameter of ref type which can consume more energy than a non-ref type","/Handles.cs","64","21","64","26"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Hash has a parameter of ref type which can consume more energy than a non-ref type","/Handles.cs","117","20","117","23"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Equals has a parameter of ref type which can consume more energy than a non-ref type","/Handles.cs","123","21","123","26"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Hash has a parameter of ref type which can consume more energy than a non-ref type","/Handles.cs","177","20","177","23"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Equals has a parameter of ref type which can consume more energy than a non-ref type","/Handles.cs","183","21","183","26"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ContributeToHash has a parameter of ref type which can consume more energy than a non-ref type","/InvasiveHashDiagnostics.cs","137","21","137","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ValidateUniqueSets has a parameter of ref type which can consume more energy than a non-ref type","/IslandAwakener.cs","437","14","437","31"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AwakenSets has a parameter of ref type which can consume more energy than a non-ref type","/IslandAwakener.cs","85","21","85","30"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TryAdd has a parameter of ref type which can consume more energy than a non-ref type","/IslandScaffold.cs","79","28","79","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method EnumerateConnectedDynamicBodies<> has a parameter of ref type which can consume more energy than a non-ref type","/Solver.cs","1871","28","1871","71"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CollectIsland<> has a parameter of ref type which can consume more energy than a non-ref type","/IslandSleeper.cs","176","21","176","54"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindIslands<> has a parameter of ref type which can consume more energy than a non-ref type","/IslandSleeper.cs","272","14","272","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExecuteRemoval has a parameter of ref type which can consume more energy than a non-ref type","/IslandSleeper.cs","435","14","435","27"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Sleep has a parameter of ref type which can consume more energy than a non-ref type","/IslandSleeper.cs","594","21","594","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Sleep has a parameter of ref type which can consume more energy than a non-ref type","/IslandSleeper.cs","908","21","908","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Matches has a parameter of ref type which can consume more energy than a non-ref type","/IslandSleeper.cs","82","25","82","31"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Matches has a parameter of ref type which can consume more energy than a non-ref type","/IslandSleeper.cs","91","25","91","31"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Matches has a parameter of ref type which can consume more energy than a non-ref type","/IslandSleeper.cs","102","25","102","31"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Compare has a parameter of ref type which can consume more energy than a non-ref type","/IslandSleeper.cs","526","24","526","30"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method PushBody<> has a parameter of ref type which can consume more energy than a non-ref type","/IslandSleeper.cs","115","21","115","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method EnqueueUnvisitedNeighbors<> has a parameter of ref type which can consume more energy than a non-ref type","/IslandSleeper.cs","134","14","134","59"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method PrintIsland has a parameter of ref type which can consume more energy than a non-ref type","/IslandSleeper.cs","535","21","535","31"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CreateFrom has a parameter of ref type which can consume more energy than a non-ref type","/SequentialFallbackBatch.cs","242","30","242","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FallbackIfInertiaIncompatible has a parameter of ref type which can consume more energy than a non-ref type","/PoseIntegrator.cs","182","21","182","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method IntegrateBundlesAfterSubstepping has a parameter of ref type which can consume more energy than a non-ref type","/PoseIntegrator.cs","536","21","536","52"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method UpdateSleepCandidacy has a parameter of ref type which can consume more energy than a non-ref type","/PoseIntegrator.cs","288","14","288","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method PredictBoundingBoxes has a parameter of ref type which can consume more energy than a non-ref type","/PoseIntegrator.cs","308","21","308","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TryRemoveDynamicBodyFromTracking has a parameter of ref type which can consume more energy than a non-ref type","/SequentialFallbackBatch.cs","129","30","129","61"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Remove has a parameter of ref type which can consume more energy than a non-ref type","/SequentialFallbackBatch.cs","150","30","150","35"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayCast<> has a parameter of ref type which can consume more energy than a non-ref type","/Simulation_Queries.cs","163","28","163","47"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Test has a parameter of ref type which can consume more energy than a non-ref type","/Simulation_Queries.cs","196","32","196","35"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Sweep<,> has a parameter of ref type which can consume more energy than a non-ref type","/Simulation_Queries.cs","263","28","263","58"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Sweep<,> has a parameter of ref type which can consume more energy than a non-ref type","/Simulation_Queries.cs","304","28","304","58"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ValidateAndCountShapefulBodies has a parameter of ref type which can consume more energy than a non-ref type","/Simulation.cs","134","28","134","57"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExecuteWorkerStage<> has a parameter of ref type which can consume more energy than a non-ref type","/Solver_Solve.cs","301","21","301","54"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method WarmStartBlock<> has a parameter of ref type which can consume more energy than a non-ref type","/Solver_Solve.cs","189","22","189","63"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ExecuteMainStage<> has a parameter of ref type which can consume more energy than a non-ref type","/Solver_Solve.cs","365","14","365","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BuildWorkBlocks<> has a parameter of ref type which can consume more energy than a non-ref type","/Solver_Solve.cs","687","31","687","63"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method OnHit has a parameter of ref type which can consume more energy than a non-ref type","/Simulation_Queries.cs","88","14","88","18"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method OnHitAtZeroT has a parameter of ref type which can consume more energy than a non-ref type","/Simulation_Queries.cs","94","14","94","25"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method OnRayHit has a parameter of ref type which can consume more energy than a non-ref type","/Simulation_Queries.cs","112","25","112","32"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ScaleAccumulatedImpulses has a parameter of ref type which can consume more energy than a non-ref type","/Solver.cs","1495","21","1495","44"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method EnumerateAccumulatedImpulses<> has a parameter of ref type which can consume more energy than a non-ref type","/Solver.cs","1536","21","1536","61"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method EnumerateConnectedBodyReferences<,> has a parameter of ref type which can consume more energy than a non-ref type","/Solver.cs","1766","30","1766","87"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method EnumerateConnectedBodyReferences<> has a parameter of ref type which can consume more energy than a non-ref type","/Solver.cs","1829","28","1829","72"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method EnumerateConnectedDynamicBodies<> has a parameter of ref type which can consume more energy than a non-ref type","/Solver.cs","1858","28","1858","71"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ValidateBodyReference has a parameter of ref type which can consume more energy than a non-ref type","/Solver.cs","418","22","418","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ValidateSetOwnership has a parameter of ref type which can consume more energy than a non-ref type","/Solver.cs","570","23","570","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AwakenBodiesInExistingBounds<> has a parameter of ref type which can consume more energy than a non-ref type","/Statics.cs","255","21","255","57"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RemoveAt<> has a parameter of ref type which can consume more energy than a non-ref type","/Statics.cs","271","21","271","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Remove<> has a parameter of ref type which can consume more energy than a non-ref type","/Statics.cs","338","21","338","44"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeNewBoundsAndAwaken<> has a parameter of ref type which can consume more energy than a non-ref type","/Statics.cs","366","14","366","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Add<> has a parameter of ref type which can consume more energy than a non-ref type","/Statics.cs","392","29","392","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method SetShape<> has a parameter of ref type which can consume more energy than a non-ref type","/Statics.cs","430","21","430","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescription<> has a parameter of ref type which can consume more energy than a non-ref type","/Statics.cs","461","28","461","61"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method AwakenBodiesInBounds<> has a parameter of ref type which can consume more energy than a non-ref type","/Statics.cs","242","14","242","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ApplyDescriptionByIndexWithoutBroadPhaseModification<> has a parameter of ref type which can consume more energy than a non-ref type","/Statics.cs","374","23","374","92"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayTest has a parameter of ref type which can consume more energy than a non-ref type","/Trees/RayBatcher.cs","120","14","120","20"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GatherIntoFirstSlot has a parameter of ref type which can consume more energy than a non-ref type","/Trees/RayBatcher.cs","200","32","200","50"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BroadcastNode has a parameter of ref type which can consume more energy than a non-ref type","/Trees/RayBatcher.cs","222","21","222","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Intersect has a parameter of ref type which can consume more energy than a non-ref type","/Trees/RayBatcher.cs","231","21","231","29"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TestNode<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/RayBatcher.cs","317","21","317","40"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RayCast<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_RayCast.cs","27","39","27","58"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CreateStagingNodeBinned has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_BinnedRefine.cs","461","20","461","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ReifyStagingNode has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_BinnedRefine.cs","534","20","534","35"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ReifyStagingNodes has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_BinnedRefine.cs","564","21","564","37"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method BinnedRefine has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_BinnedRefine.cs","578","28","578","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CollectSubtreesDirect has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_CollectSubtreesDirect.cs","53","28","53","48"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TryLock has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_CacheOptimizer.cs","69","21","69","27"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TryLockSwapTargetThreadSafe has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_CacheOptimizer.cs","216","28","216","54"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TrySwapNodesThreadSafe has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_CacheOptimizer.cs","306","28","306","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CacheOptimize has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_CacheOptimizer.cs","574","21","574","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method DispatchTestForNodeAgainstLeaf<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_IntertreeQueries.cs","12","21","12","67"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TestNodeAgainstLeaf<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_IntertreeQueries.cs","23","29","23","64"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method DispatchTestForLeafAgainstNode<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_IntertreeQueries.cs","45","21","45","67"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TestLeafAgainstNode<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_IntertreeQueries.cs","56","21","56","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOverlapsBetweenDifferentNodes<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_IntertreeQueries.cs","106","29","106","77"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method MergeLeafNodes has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_Add.cs","21","20","21","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method InsertLeafIntoEmptySlot has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_Add.cs","60","20","60","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CreateMerged has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_Add.cs","77","21","77","32"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeBestInsertionChoice has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_Add.cs","85","51","85","76"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeBoundsMetric has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_Add.cs","180","31","180","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeBoundsMetric has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_Add.cs","185","31","185","49"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Validate has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_Diagnostics.cs","66","30","66","37"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ComputeMaximumDepth has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_Diagnostics.cs","189","29","189","47"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ValidateStaging has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_RefineCommon.cs","231","21","231","35"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ValidateStaging has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_RefineCommon.cs","257","21","257","35"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method DispatchTestForLeaf<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_SelfQueries.cs","22","21","22","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TestLeafAgainstNode<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_SelfQueries.cs","33","21","33","56"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method DispatchTestForNodes<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_SelfQueries.cs","57","21","57","57"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOverlapsBetweenDifferentNodes<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_SelfQueries.cs","89","21","89","69"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOverlapsInNode<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_SelfQueries.cs","119","21","119","54"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RefitAndMeasure has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_RefinementScheduling.cs","14","22","14","36"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RefitAndMark has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_RefinementScheduling.cs","40","22","40","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RefitAndMark has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_RefinementScheduling.cs","90","22","90","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Sweep<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_Sweep.cs","122","37","122","54"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method GetOverlaps<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_VolumeQuery.cs","10","30","10","53"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CheckForRefinementOverlaps has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_MultithreadedRefitRefine.cs","362","21","362","46"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindPartition has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_SweepBuilder.cs","108","30","108","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method SplitLeavesIntoChildren has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_SweepBuilder.cs","167","21","167","43"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CreateSweepBuilderNode has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_SweepBuilder.cs","210","20","210","41"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method RefitAndRefine has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_MultithreadedRefitRefine.cs","155","32","155","45"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CollectNodesForMultithreadedRefit has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_MultithreadedRefitRefine.cs","165","25","165","57"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Compare has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_SweepBuilder.cs","32","24","32","30"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method FindPartitionBinned has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_BinnedRefine.cs","136","21","136","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CollectSubtrees has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_RefineCommon.cs","172","28","172","42"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Suballocate has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_BinnedRefine.cs","72","29","72","39"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method SplitSubtreesIntoChildrenBinned has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_BinnedRefine.cs","409","21","409","51"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method ReifyChildren has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_BinnedRefine.cs","495","21","495","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method CollectSubtreesForNodeDirect has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_CollectSubtreesDirect.cs","12","21","12","48"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method DispatchTestForNodes<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_IntertreeQueries.cs","80","21","80","57"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Insert has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_RefineCommon.cs","28","28","28","33"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TryPop has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_RefineCommon.cs","132","21","132","26"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method TestLeaf has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_Sweep.cs","13","21","13","28"
"Parameter by value","Using parameters by reference instead of value","recommendation","Method Sweep<> has a parameter of ref type which can consume more energy than a non-ref type","/Trees/Tree_Sweep.cs","17","30","17","47"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Resize implements the same conditional statement in multiple locations within the same scope.","/Bodies.cs","833","9","844","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method EnsureCapacity implements the same conditional statement in multiple locations within the same scope.","/Bodies.cs","866","9","875","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method ScatterPose implements the same conditional statement in multiple locations within the same scope.","/Bodies_GatherScatter.cs","493","17","537","17"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method ScatterInertia implements the same conditional statement in multiple locations within the same scope.","/Bodies_GatherScatter.cs","562","17","607","17"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method ScatterVelocities<> implements the same conditional statement in multiple locations within the same scope.","/Bodies_GatherScatter.cs","638","17","687","17"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method ScatterVelocities<> implements the same conditional statement in multiple locations within the same scope.","/Bodies_GatherScatter.cs","689","17","728","17"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method RayTest implements the same conditional statement in multiple locations within the same scope.","/Collidables/Box.cs","73","9","147","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method RayTest implements the same conditional statement in multiple locations within the same scope.","/Collidables/Capsule.cs","59","9","155","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method RayTest implements the same conditional statement in multiple locations within the same scope.","/Collidables/Capsule.cs","91","13","120","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method ValidateChildIndex implements the same conditional statement in multiple locations within the same scope.","/Collidables/Compound.cs","68","9","87","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method ComputeHull implements the same conditional statement in multiple locations within the same scope.","/Collidables/ConvexHullHelper.cs","448","9","724","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method CreateTransformedCopy implements the same conditional statement in multiple locations within the same scope.","/Collidables/ConvexHullHelper.cs","880","9","917","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method RayTest implements the same conditional statement in multiple locations within the same scope.","/Collidables/Cylinder.cs","77","9","166","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method RayTest implements the same conditional statement in multiple locations within the same scope.","/Collidables/Cylinder.cs","109","13","138","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Mesh implements the same conditional statement in multiple locations within the same scope.","/Collidables/Mesh.cs","98","9","110","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method RayTest implements the same conditional statement in multiple locations within the same scope.","/Collidables/Sphere.cs","60","9","96","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method RayTest implements the same conditional statement in multiple locations within the same scope.","/Collidables/Triangle.cs","61","9","96","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method ExecuteRefitAndMark implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/BroadPhase.cs","160","13","174","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method ExecuteRefine implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/BroadPhase.cs","185","13","199","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method EnsureCapacity implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/BroadPhase.cs","247","9","252","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method ResizeCapacity implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/BroadPhase.cs","254","9","260","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Flush implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionBatcher.cs","305","13","321","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/BoxConvexHullTester.cs","90","13","336","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/BoxConvexHullTester.cs","130","17","265","17"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/BoxConvexHullTester.cs","267","17","328","17"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/BoxCylinderTester.cs","107","9","386","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/CapsuleConvexHullTester.cs","101","21","133","21"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/CapsuleConvexHullTester.cs","103","25","116","25"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/CapsuleCylinderTester.cs","136","9","345","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/CapsuleTriangleTester.cs","113","9","377","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method ExecuteBatch<> implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/ConvexCollisionTask.cs","51","9","141","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/ConvexHullPairTester.cs","127","21","161","21"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/ConvexHullPairTester.cs","165","21","194","21"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method IntersectLineCircle implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/CylinderConvexHullTester.cs","29","9","64","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/CylinderConvexHullTester.cs","165","13","396","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/CylinderConvexHullTester.cs","214","25","239","25"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/CylinderConvexHullTester.cs","246","21","282","21"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/CylinderConvexHullTester.cs","293","17","395","17"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/CylinderConvexHullTester.cs","328","25","360","25"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/CylinderConvexHullTester.cs","330","29","343","29"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/CylinderPairTester.cs","102","9","448","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Reduce implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/ManifoldCandidateHelper.cs","319","9","475","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Reduce implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/ManifoldCandidateHelper.cs","438","13","461","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method WriteSlot implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/PairTypes.cs","219","9","234","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/SphereTriangleTester.cs","31","9","121","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/TriangleConvexHullTester.cs","17","9","433","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/TriangleConvexHullTester.cs","209","13","425","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/TriangleConvexHullTester.cs","251","17","344","17"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/TriangleCylinderTester.cs","106","9","594","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/TriangleCylinderTester.cs","384","13","577","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/CollisionTasks/TrianglePairTester.cs","265","9","510","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method AllocateSpaceForTargets implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/ConstraintRemover.cs","75","13","96","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method ReadFirst implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/ConvexContactManifoldWide.cs","85","9","114","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method ReadFirst implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/ConvexContactManifoldWide.cs","157","9","204","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method GetNextNormal<> implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/DepthRefiner.cs","102","9","318","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method FindMinimumDepth implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/DepthRefiner.cs","340","9","391","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method FindMinimumDepth implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/DepthRefiner.cs","365","13","380","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method GetNextNormal<> implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/DepthRefiner.cs","461","9","688","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method FindMinimumDepth implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/DepthRefiner.cs","710","9","775","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method FindMinimumDepth implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/DepthRefiner.cs","736","13","751","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method CheckFreshnessInRegion implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/FreshnessChecker.cs","69","17","122","17"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method CheckFreshnessInRegion implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/FreshnessChecker.cs","73","21","96","21"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method CheckFreshnessInRegion implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/FreshnessChecker.cs","75","25","84","25"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method CheckFreshnessInRegion implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/FreshnessChecker.cs","86","25","95","25"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method CheckFreshnessInRegion implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/FreshnessChecker.cs","98","21","121","21"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method CheckFreshnessInRegion implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/FreshnessChecker.cs","100","25","109","25"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method CheckFreshnessInRegion implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/FreshnessChecker.cs","111","25","120","25"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method HandleOverlap implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/NarrowPhase.cs","403","9","478","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method AddBatchEntries implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/NarrowPhase.cs","537","21","585","21"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method OnPreflush implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/NarrowPhasePreflush.cs","210","9","409","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method OnPreflush implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/NarrowPhasePreflush.cs","240","13","384","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method ChooseMostDistinct implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/NonconvexReduction.cs","106","9","247","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Prepare implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/PairCache.cs","133","13","139","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Postflush implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/PairCache.cs","271","13","283","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Dispose implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/PairCache.cs","320","9","347","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method GetTask implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/SweepTaskRegistry.cs","170","9","179","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method GetSphereCastInterval implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/SweepTasks/ConvexSweepTaskCommon.cs","60","9","99","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Sweep<> implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/SweepTasks/ConvexSweepTaskCommon.cs","278","9","542","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Sweep<> implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/SweepTasks/ConvexSweepTaskCommon.cs","377","13","537","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Sweep<> implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/SweepTasks/ConvexSweepTaskCommon.cs","518","17","530","17"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method FindClosestPoint implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/SweepTasks/GJKDistanceTester.cs","204","9","332","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/SweepTasks/GJKDistanceTester.cs","378","13","432","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Test implements the same conditional statement in multiple locations within the same scope.","/CollisionDetection/SweepTasks/SphereTriangleDistanceTester.cs","12","9","90","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method AllocateInTypeBatchForFallback implements the same conditional statement in multiple locations within the same scope.","/Constraints/TypeProcessor.cs","453","9","573","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method AwakenSets implements the same conditional statement in multiple locations within the same scope.","/IslandAwakener.cs","86","9","131","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method DisposeForCompletedAwakenings implements the same conditional statement in multiple locations within the same scope.","/IslandAwakener.cs","807","13","824","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Sleep implements the same conditional statement in multiple locations within the same scope.","/IslandSleeper.cs","595","9","897","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Sleep implements the same conditional statement in multiple locations within the same scope.","/IslandSleeper.cs","697","21","787","21"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method EnsureSetsCapacity implements the same conditional statement in multiple locations within the same scope.","/IslandSleeper.cs","971","9","985","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method IntegrateBundlesAfterSubstepping implements the same conditional statement in multiple locations within the same scope.","/PoseIntegrator.cs","631","21","680","21"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method ValidateDescription implements the same conditional statement in multiple locations within the same scope.","/SolveDescription.cs","41","9","48","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method SetMinimumCapacityForType implements the same conditional statement in multiple locations within the same scope.","/Solver.cs","154","9","162","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method AllocateInBatch implements the same conditional statement in multiple locations within the same scope.","/Solver.cs","1018","9","1057","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method AllocateNewConstraintBatch implements the same conditional statement in multiple locations within the same scope.","/Solver.cs","1082","9","1092","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method ExecuteMainStage<> implements the same conditional statement in multiple locations within the same scope.","/Solver_Solve.cs","366","9","407","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method TestNode<> implements the same conditional statement in multiple locations within the same scope.","/Trees/RayBatcher.cs","318","9","412","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Resize implements the same conditional statement in multiple locations within the same scope.","/Trees/Tree.cs","197","9","225","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method FindPartitionBinned implements the same conditional statement in multiple locations within the same scope.","/Trees/Tree_BinnedRefine.cs","282","13","358","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method SplitSubtreesIntoChildrenBinned implements the same conditional statement in multiple locations within the same scope.","/Trees/Tree_BinnedRefine.cs","412","9","459","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method TryLock implements the same conditional statement in multiple locations within the same scope.","/Trees/Tree_CacheOptimizer.cs","74","13","91","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method IncrementalCacheOptimizeThreadSafe implements the same conditional statement in multiple locations within the same scope.","/Trees/Tree_CacheOptimizer.cs","439","17","517","17"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method IncrementalCacheOptimize implements the same conditional statement in multiple locations within the same scope.","/Trees/Tree_CacheOptimizer.cs","549","13","569","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Validate implements the same conditional statement in multiple locations within the same scope.","/Trees/Tree_Diagnostics.cs","67","9","130","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Validate implements the same conditional statement in multiple locations within the same scope.","/Trees/Tree_Diagnostics.cs","99","17","112","17"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method RayCast<> implements the same conditional statement in multiple locations within the same scope.","/Trees/Tree_RayCast.cs","93","9","112","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method ValidateStaging implements the same conditional statement in multiple locations within the same scope.","/Trees/Tree_RefineCommon.cs","232","9","256","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method RefitAndMeasure implements the same conditional statement in multiple locations within the same scope.","/Trees/Tree_RefinementScheduling.cs","15","9","38","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method RefitAndMark implements the same conditional statement in multiple locations within the same scope.","/Trees/Tree_RefinementScheduling.cs","41","9","88","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Refit implements the same conditional statement in multiple locations within the same scope.","/Trees/Tree_Refit.cs","35","9","49","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method GetOverlapsInNode<> implements the same conditional statement in multiple locations within the same scope.","/Trees/Tree_SelfQueries.cs","120","9","138","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method CollectJobsInNode implements the same conditional statement in multiple locations within the same scope.","/Trees/Tree_SelfQueriesMT.cs","257","13","280","13"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method Sweep<> implements the same conditional statement in multiple locations within the same scope.","/Trees/Tree_Sweep.cs","85","9","104","9"
"Repeated conditionals","A conditional statement that occurs more than once within the same scope.","recommendation","Method SplitLeavesIntoChildren implements the same conditional statement in multiple locations within the same scope.","/Trees/Tree_SweepBuilder.cs","168","9","208","9"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Bodies.cs","692","33","692","68"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Bodies.cs","347","25","347","51"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Bodies.cs","378","25","378","51"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","117","55","117","98"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","197","50","197","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","198","50","198","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","199","50","199","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","200","50","200","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","201","50","201","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","202","50","202","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","203","50","203","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","204","50","204","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","206","62","206","73"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","207","62","207","73"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","208","62","208","73"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","209","62","209","73"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","211","59","211","70"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","212","59","212","70"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","213","59","213","70"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","236","50","236","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","237","50","237","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","238","50","238","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","239","50","239","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","240","50","240","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","241","50","241","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","243","66","243","77"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","244","66","244","77"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","245","66","245","77"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","247","67","247","78"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","248","67","248","78"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","249","67","249","78"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","335","50","335","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","336","50","336","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","337","50","337","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","338","50","338","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","339","50","339","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","340","50","340","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","341","50","341","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","342","50","342","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","346","66","346","77"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","347","66","347","77"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","348","66","348","77"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","349","66","349","77"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","357","63","357","74"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","358","63","358","74"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","359","63","359","74"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","387","50","387","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","388","50","388","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","389","50","389","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","390","50","390","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","391","50","391","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","392","50","392","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","396","70","396","81"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","397","70","397","81"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","398","70","398","81"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","406","71","406","82"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","407","71","407","82"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","408","71","408","82"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","439","50","439","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","440","50","440","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","441","50","441","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","442","50","442","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","443","50","443","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","444","50","444","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","445","50","445","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","446","50","446","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","450","84","450","95"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","451","84","451","95"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","452","84","452","95"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","453","84","453","95"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","454","84","454","95"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","455","84","455","95"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","463","72","463","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","511","50","511","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","512","50","512","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","513","50","513","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","514","50","514","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","515","50","515","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","516","50","516","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","517","50","517","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","518","50","518","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","520","123","520","134"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","521","123","521","134"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","522","123","522","134"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","523","123","523","134"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","524","123","524","134"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","525","123","525","134"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","526","123","526","134"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","527","123","527","134"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","580","50","580","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","581","50","581","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","582","50","582","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","583","50","583","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","584","50","584","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","585","50","585","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","586","50","586","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","587","50","587","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","590","128","590","139"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","591","128","591","139"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","592","128","592","139"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","593","128","593","139"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","594","128","594","139"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","595","128","595","139"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","596","128","596","139"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","597","128","597","139"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","671","50","671","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","672","50","672","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","673","50","673","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","674","50","674","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","709","50","709","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","710","50","710","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","711","50","711","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","712","50","712","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","713","50","713","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","714","50","714","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","715","50","715","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","716","50","716","83"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","720","129","720","140"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","721","129","721","140"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","722","129","722","140"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","723","129","723","140"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","724","129","724","140"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","725","129","725","140"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","726","129","726","140"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","727","129","727","140"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Bodies_GatherScatter.cs","67","54","67","89"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","197","50","197","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","198","50","198","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","199","50","199","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","200","50","200","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","201","50","201","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","202","50","202","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","203","50","203","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","204","50","204","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","236","50","236","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","237","50","237","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","238","50","238","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","239","50","239","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","240","50","240","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","241","50","241","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Bodies_GatherScatter.cs","279","51","279","82"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Bodies_GatherScatter.cs","282","51","282","82"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Bodies_GatherScatter.cs","285","51","285","82"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Bodies_GatherScatter.cs","288","51","288","82"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Bodies_GatherScatter.cs","291","51","291","82"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Bodies_GatherScatter.cs","294","51","294","82"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Bodies_GatherScatter.cs","297","51","297","82"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Bodies_GatherScatter.cs","300","51","300","82"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","335","50","335","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","336","50","336","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","337","50","337","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","338","50","338","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","339","50","339","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","340","50","340","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","341","50","341","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","342","50","342","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","387","50","387","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","388","50","388","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","389","50","389","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","390","50","390","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","391","50","391","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","392","50","392","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","439","50","439","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","440","50","440","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","441","50","441","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","442","50","442","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","443","50","443","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","444","50","444","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","445","50","445","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","446","50","446","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","511","50","511","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","512","50","512","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","513","50","513","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","514","50","514","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","515","50","515","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","516","50","516","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","517","50","517","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","518","50","518","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","580","50","580","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","581","50","581","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","582","50","582","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","583","50","583","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","584","50","584","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","585","50","585","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","586","50","586","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","587","50","587","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","671","50","671","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","672","50","672","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","673","50","673","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","674","50","674","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","709","50","709","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","710","50","710","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","711","50","711","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","712","50","712","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","713","50","713","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","714","50","714","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","715","50","715","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","716","50","716","72"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Bodies_GatherScatter.cs","99","56","99","91"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","197","50","197","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","198","50","198","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","199","50","199","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","200","50","200","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","201","50","201","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","202","50","202","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","203","50","203","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","204","50","204","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","236","50","236","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","237","50","237","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","238","50","238","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","239","50","239","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","240","50","240","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","241","50","241","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","335","50","335","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","336","50","336","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","337","50","337","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","338","50","338","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","339","50","339","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","340","50","340","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","341","50","341","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","342","50","342","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","387","50","387","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","388","50","388","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","389","50","389","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","390","50","390","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","391","50","391","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","392","50","392","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","439","50","439","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","440","50","440","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","441","50","441","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","442","50","442","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","443","50","443","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","444","50","444","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","445","50","445","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","446","50","446","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","511","50","511","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","512","50","512","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","513","50","513","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","514","50","514","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","515","50","515","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","516","50","516","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","517","50","517","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","518","50","518","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","580","50","580","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","581","50","581","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","582","50","582","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","583","50","583","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","584","50","584","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","585","50","585","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","586","50","586","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","587","50","587","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","671","50","671","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","672","50","672","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","673","50","673","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","674","50","674","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","709","50","709","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","710","50","710","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","711","50","711","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","712","50","712","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","713","50","713","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","714","50","714","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","715","50","715","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Bodies_GatherScatter.cs","716","50","716","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Collidables/BoundingBoxBatcher.cs","30","30","30","48"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Collidables/BoundingBoxBatcher.cs","65","31","65","66"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Collidables/BoundingBoxBatcher.cs","42","25","42","43"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Collidables/CollidableReference.cs","81","30","81","48"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Collidables/CollidableReference.cs","96","22","96","58"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Collidables/TypedIndex.cs","29","32","29","50"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Collidables/TypedIndex.cs","48","29","48","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Collidables/TypedIndex.cs","20","32","20","50"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Collidables/TypedIndex.cs","38","27","38","44"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Collidables/TypedIndex.cs","48","29","48","48"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/CollisionBatcherContinuations.cs","122","29","122","125"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/CollisionBatcherContinuations.cs","133","98","133","131"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/CollisionBatcherContinuations.cs","134","103","134","125"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/CollisionBatcherContinuations.cs","122","29","122","100"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/ConstraintRemover.cs","226","29","226","93"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/ConstraintRemover.cs","227","29","227","93"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/ConstraintRemover.cs","386","103","386","152"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/ConstraintRemover.cs","159","72","159","121"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/ConstraintRemover.cs","344","58","344","107"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/ConstraintRemover.cs","344","139","344","184"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/ContinuationIndex.cs","18","32","18","50"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/ContinuationIndex.cs","27","32","27","49"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/ContinuationIndex.cs","47","29","47","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/ContinuationIndex.cs","36","27","36","44"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/ContinuationIndex.cs","47","29","47","48"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/FreshnessChecker.cs","72","26","72","63"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/FreshnessChecker.cs","74","30","74","67"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/FreshnessChecker.cs","76","34","76","71"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/FreshnessChecker.cs","80","34","80","71"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/FreshnessChecker.cs","85","30","85","67"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/FreshnessChecker.cs","87","34","87","71"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/FreshnessChecker.cs","91","34","91","71"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/FreshnessChecker.cs","97","26","97","63"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/FreshnessChecker.cs","99","30","99","67"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/FreshnessChecker.cs","101","34","101","71"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/FreshnessChecker.cs","105","34","105","71"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/FreshnessChecker.cs","110","30","110","67"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/FreshnessChecker.cs","112","34","112","71"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/FreshnessChecker.cs","116","34","116","71"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/FreshnessChecker.cs","61","27","61","40"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/MeshReduction.cs","392","29","392","108"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/MeshReduction.cs","495","29","495","108"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/MeshReduction.cs","354","42","354","100"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/MeshReduction.cs","445","26","445","84"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/NarrowPhase.cs","504","34","504","134"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/NarrowPhaseConstraintUpdate.cs","269","17","269","51"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/PairCacheIndex.cs","38","26","38","55"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/PairCacheIndex.cs","47","26","47","51"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/PairCacheIndex.cs","56","32","56","51"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/PairCacheIndex.cs","69","30","69","96"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/PairCacheIndex.cs","82","39","82","105"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/PairCacheIndex.cs","19","27","19","46"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/CollisionDetection/PairCacheIndex.cs","28","27","28","46"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/PairCacheIndex.cs","69","30","69","82"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/PairCacheIndex.cs","82","39","82","91"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/PairCacheIndex.cs","69","30","69","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/PairCacheIndex.cs","82","39","82","70"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/SweepTasks/GJKDistanceTester.cs","258","87","258","95"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/SweepTasks/GJKDistanceTester.cs","283","87","283","95"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/SweepTasks/GJKDistanceTester.cs","290","87","290","95"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/SweepTasks/GJKDistanceTester.cs","297","87","297","95"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/SweepTasks/GJKDistanceTester.cs","325","183","325","195"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/SweepTasks/GJKDistanceTester.cs","258","87","258","91"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/SweepTasks/GJKDistanceTester.cs","283","87","283","91"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/SweepTasks/GJKDistanceTester.cs","290","87","290","91"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/SweepTasks/GJKDistanceTester.cs","297","87","297","91"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/SweepTasks/GJKDistanceTester.cs","325","183","325","191"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/CollisionDetection/SweepTasks/GJKDistanceTester.cs","325","183","325","187"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/ConstraintBatch.cs","163","68","163","110"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Constraints/TypeProcessor.cs","480","81","480","148"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Constraints/TypeProcessor.cs","816","33","816","92"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Constraints/TypeProcessor.cs","942","73","942","194"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Constraints/TypeProcessor.cs","993","47","993","95"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Constraints/TypeProcessor.cs","996","42","996","134"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Constraints/TypeProcessor.cs","1084","73","1084","192"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Constraints/TypeProcessor.cs","1165","41","1165","117"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Constraints/TypeProcessor.cs","504","43","504","87"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Constraints/TypeProcessor.cs","816","52","816","91"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Constraints/TypeProcessor.cs","942","101","942","143"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Constraints/TypeProcessor.cs","942","155","942","193"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Constraints/TypeProcessor.cs","996","89","996","133"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Constraints/TypeProcessor.cs","1084","97","1084","140"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Constraints/TypeProcessor.cs","1084","152","1084","191"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Constraints/TypeProcessor.cs","1197","36","1197","67"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Constraints/TypeProcessor.cs","1035","18","1035","56"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Constraints/TypeProcessor.cs","1036","18","1036","56"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Constraints/TypeProcessor.cs","1037","19","1037","51"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/HandyEnumerators.cs","30","63","30","105"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/HandyEnumerators.cs","55","67","55","109"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/HandyEnumerators.cs","76","32","76","74"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/IslandSleeper.cs","578","100","578","143"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/SequentialFallbackBatch.cs","166","37","166","75"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Solver.cs","379","131","379","177"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Solver.cs","384","98","384","144"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Solver.cs","639","102","639","137"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Solver.cs","708","136","708","200"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Solver.cs","752","25","752","61"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Solver.cs","831","53","831","106"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Solver.cs","835","102","835","155"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Solver.cs","861","29","861","81"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Solver.cs","1026","84","1026","126"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Solver.cs","1070","45","1070","81"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Solver.cs","1630","41","1630","78"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Solver.cs","1708","17","1708","96"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Solver.cs","1784","41","1784","70"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Solver.cs","1789","45","1789","74"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Solver.cs","1371","33","1371","75"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Solver.cs","374","76","374","118"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Solver_Solve.cs","990","41","990","79"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Solver_Solve.cs","994","41","994","96"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Solver_Solve.cs","1013","53","1013","127"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Solver_Solve.cs","1018","51","1018","104"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Solver_Solve.cs","1043","21","1043","84"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Solver_Solve.cs","1181","83","1181","107"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Solver_Solve.cs","1183","55","1183","80"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Solver_Solve.cs","1184","29","1184","66"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Solver_Solve.cs","1196","83","1196","107"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Solver_Solve.cs","1198","55","1198","80"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Solver_Solve.cs","1199","29","1199","66"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Solver_Solve.cs","1261","29","1261","136"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Trees/Leaf.cs","18","32","18","50"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... | ... should be used with short circuiting","/Trees/Leaf.cs","35","22","35","79"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Trees/Leaf.cs","26","33","26","51"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Trees/Leaf.cs","34","27","34","41"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Trees/Leaf.cs","35","23","35","51"
"Non-short circuit","Not using short circuiting boolean operators can increase energy consumption.","warning","Operator ... & ... should be used with short circuiting","/Trees/Tree_BinnedRefine.cs","77","27","77","67"
